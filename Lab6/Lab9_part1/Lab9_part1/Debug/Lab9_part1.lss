
Lab9_part1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000007c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000074e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  000007c2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007c2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000007f4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000834  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000096e  00000000  00000000  00000874  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000083f  00000000  00000000  000011e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c7  00000000  00000000  00001a21  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000c0  00000000  00000000  00001ee8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000498  00000000  00000000  00001fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000015a  00000000  00000000  00002440  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000259a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	53 c0       	rjmp	.+166    	; 0xac <__bad_interrupt>
   6:	00 00       	nop
   8:	51 c0       	rjmp	.+162    	; 0xac <__bad_interrupt>
   a:	00 00       	nop
   c:	4f c0       	rjmp	.+158    	; 0xac <__bad_interrupt>
   e:	00 00       	nop
  10:	4d c0       	rjmp	.+154    	; 0xac <__bad_interrupt>
  12:	00 00       	nop
  14:	4b c0       	rjmp	.+150    	; 0xac <__bad_interrupt>
  16:	00 00       	nop
  18:	49 c0       	rjmp	.+146    	; 0xac <__bad_interrupt>
  1a:	00 00       	nop
  1c:	47 c0       	rjmp	.+142    	; 0xac <__bad_interrupt>
  1e:	00 00       	nop
  20:	45 c0       	rjmp	.+138    	; 0xac <__bad_interrupt>
  22:	00 00       	nop
  24:	43 c0       	rjmp	.+134    	; 0xac <__bad_interrupt>
  26:	00 00       	nop
  28:	41 c0       	rjmp	.+130    	; 0xac <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3f c0       	rjmp	.+126    	; 0xac <__bad_interrupt>
  2e:	00 00       	nop
  30:	3d c0       	rjmp	.+122    	; 0xac <__bad_interrupt>
  32:	00 00       	nop
  34:	3b c0       	rjmp	.+118    	; 0xac <__bad_interrupt>
  36:	00 00       	nop
  38:	39 c0       	rjmp	.+114    	; 0xac <__bad_interrupt>
  3a:	00 00       	nop
  3c:	37 c0       	rjmp	.+110    	; 0xac <__bad_interrupt>
  3e:	00 00       	nop
  40:	35 c0       	rjmp	.+106    	; 0xac <__bad_interrupt>
  42:	00 00       	nop
  44:	33 c0       	rjmp	.+102    	; 0xac <__bad_interrupt>
  46:	00 00       	nop
  48:	31 c0       	rjmp	.+98     	; 0xac <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2f c0       	rjmp	.+94     	; 0xac <__bad_interrupt>
  4e:	00 00       	nop
  50:	2d c0       	rjmp	.+90     	; 0xac <__bad_interrupt>
  52:	00 00       	nop
  54:	2b c0       	rjmp	.+86     	; 0xac <__bad_interrupt>
  56:	00 00       	nop
  58:	29 c0       	rjmp	.+82     	; 0xac <__bad_interrupt>
  5a:	00 00       	nop
  5c:	27 c0       	rjmp	.+78     	; 0xac <__bad_interrupt>
  5e:	00 00       	nop
  60:	25 c0       	rjmp	.+74     	; 0xac <__bad_interrupt>
  62:	00 00       	nop
  64:	23 c0       	rjmp	.+70     	; 0xac <__bad_interrupt>
  66:	00 00       	nop
  68:	21 c0       	rjmp	.+66     	; 0xac <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1f c0       	rjmp	.+62     	; 0xac <__bad_interrupt>
  6e:	00 00       	nop
  70:	1d c0       	rjmp	.+58     	; 0xac <__bad_interrupt>
  72:	00 00       	nop
  74:	1b c0       	rjmp	.+54     	; 0xac <__bad_interrupt>
  76:	00 00       	nop
  78:	19 c0       	rjmp	.+50     	; 0xac <__bad_interrupt>
  7a:	00 00       	nop
  7c:	17 c0       	rjmp	.+46     	; 0xac <__bad_interrupt>
  7e:	00 00       	nop
  80:	15 c0       	rjmp	.+42     	; 0xac <__bad_interrupt>
  82:	00 00       	nop
  84:	13 c0       	rjmp	.+38     	; 0xac <__bad_interrupt>
  86:	00 00       	nop
  88:	11 c0       	rjmp	.+34     	; 0xac <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_clear_bss>:
  98:	21 e0       	ldi	r18, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	01 c0       	rjmp	.+2      	; 0xa2 <.do_clear_bss_start>

000000a0 <.do_clear_bss_loop>:
  a0:	1d 92       	st	X+, r1

000000a2 <.do_clear_bss_start>:
  a2:	a6 30       	cpi	r26, 0x06	; 6
  a4:	b2 07       	cpc	r27, r18
  a6:	e1 f7       	brne	.-8      	; 0xa0 <.do_clear_bss_loop>
  a8:	bb d1       	rcall	.+886    	; 0x420 <main>
  aa:	4f c3       	rjmp	.+1694   	; 0x74a <_exit>

000000ac <__bad_interrupt>:
  ac:	a9 cf       	rjmp	.-174    	; 0x0 <__vectors>

000000ae <set_PWM>:
}

void PWM_off() {
	TCCR0A = 0x00;
	TCCR0B = 0x00;
}
  ae:	0f 93       	push	r16
  b0:	1f 93       	push	r17
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
  b6:	00 d0       	rcall	.+0      	; 0xb8 <set_PWM+0xa>
  b8:	00 d0       	rcall	.+0      	; 0xba <set_PWM+0xc>
  ba:	cd b7       	in	r28, 0x3d	; 61
  bc:	de b7       	in	r29, 0x3e	; 62
  be:	69 83       	std	Y+1, r22	; 0x01
  c0:	7a 83       	std	Y+2, r23	; 0x02
  c2:	8b 83       	std	Y+3, r24	; 0x03
  c4:	9c 83       	std	Y+4, r25	; 0x04
  c6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <_edata>
  ca:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <_edata+0x1>
  ce:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <_edata+0x2>
  d2:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <_edata+0x3>
  d6:	9c 01       	movw	r18, r24
  d8:	ad 01       	movw	r20, r26
  da:	69 81       	ldd	r22, Y+1	; 0x01
  dc:	7a 81       	ldd	r23, Y+2	; 0x02
  de:	8b 81       	ldd	r24, Y+3	; 0x03
  e0:	9c 81       	ldd	r25, Y+4	; 0x04
  e2:	ba d1       	rcall	.+884    	; 0x458 <__cmpsf2>
  e4:	88 23       	and	r24, r24
  e6:	09 f4       	brne	.+2      	; 0xea <set_PWM+0x3c>
  e8:	6c c0       	rjmp	.+216    	; 0x1c2 <set_PWM+0x114>
  ea:	20 e0       	ldi	r18, 0x00	; 0
  ec:	30 e0       	ldi	r19, 0x00	; 0
  ee:	a9 01       	movw	r20, r18
  f0:	69 81       	ldd	r22, Y+1	; 0x01
  f2:	7a 81       	ldd	r23, Y+2	; 0x02
  f4:	8b 81       	ldd	r24, Y+3	; 0x03
  f6:	9c 81       	ldd	r25, Y+4	; 0x04
  f8:	af d1       	rcall	.+862    	; 0x458 <__cmpsf2>
  fa:	88 23       	and	r24, r24
  fc:	51 f4       	brne	.+20     	; 0x112 <set_PWM+0x64>
  fe:	85 e4       	ldi	r24, 0x45	; 69
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	25 e4       	ldi	r18, 0x45	; 69
 104:	30 e0       	ldi	r19, 0x00	; 0
 106:	f9 01       	movw	r30, r18
 108:	20 81       	ld	r18, Z
 10a:	28 70       	andi	r18, 0x08	; 8
 10c:	fc 01       	movw	r30, r24
 10e:	20 83       	st	Z, r18
 110:	09 c0       	rjmp	.+18     	; 0x124 <set_PWM+0x76>
 112:	85 e4       	ldi	r24, 0x45	; 69
 114:	90 e0       	ldi	r25, 0x00	; 0
 116:	25 e4       	ldi	r18, 0x45	; 69
 118:	30 e0       	ldi	r19, 0x00	; 0
 11a:	f9 01       	movw	r30, r18
 11c:	20 81       	ld	r18, Z
 11e:	23 60       	ori	r18, 0x03	; 3
 120:	fc 01       	movw	r30, r24
 122:	20 83       	st	Z, r18
 124:	28 e5       	ldi	r18, 0x58	; 88
 126:	39 e3       	ldi	r19, 0x39	; 57
 128:	44 e7       	ldi	r20, 0x74	; 116
 12a:	5f e3       	ldi	r21, 0x3F	; 63
 12c:	69 81       	ldd	r22, Y+1	; 0x01
 12e:	7a 81       	ldd	r23, Y+2	; 0x02
 130:	8b 81       	ldd	r24, Y+3	; 0x03
 132:	9c 81       	ldd	r25, Y+4	; 0x04
 134:	91 d1       	rcall	.+802    	; 0x458 <__cmpsf2>
 136:	88 23       	and	r24, r24
 138:	34 f4       	brge	.+12     	; 0x146 <set_PWM+0x98>
 13a:	87 e4       	ldi	r24, 0x47	; 71
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	2f ef       	ldi	r18, 0xFF	; 255
 140:	fc 01       	movw	r30, r24
 142:	20 83       	st	Z, r18
 144:	2e c0       	rjmp	.+92     	; 0x1a2 <set_PWM+0xf4>
 146:	20 e0       	ldi	r18, 0x00	; 0
 148:	34 e2       	ldi	r19, 0x24	; 36
 14a:	44 ef       	ldi	r20, 0xF4	; 244
 14c:	56 e4       	ldi	r21, 0x46	; 70
 14e:	69 81       	ldd	r22, Y+1	; 0x01
 150:	7a 81       	ldd	r23, Y+2	; 0x02
 152:	8b 81       	ldd	r24, Y+3	; 0x03
 154:	9c 81       	ldd	r25, Y+4	; 0x04
 156:	92 d2       	rcall	.+1316   	; 0x67c <__gesf2>
 158:	18 16       	cp	r1, r24
 15a:	2c f4       	brge	.+10     	; 0x166 <set_PWM+0xb8>
 15c:	87 e4       	ldi	r24, 0x47	; 71
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	fc 01       	movw	r30, r24
 162:	10 82       	st	Z, r1
 164:	1e c0       	rjmp	.+60     	; 0x1a2 <set_PWM+0xf4>
 166:	07 e4       	ldi	r16, 0x47	; 71
 168:	10 e0       	ldi	r17, 0x00	; 0
 16a:	20 e0       	ldi	r18, 0x00	; 0
 16c:	30 e0       	ldi	r19, 0x00	; 0
 16e:	40 e0       	ldi	r20, 0x00	; 0
 170:	53 e4       	ldi	r21, 0x43	; 67
 172:	69 81       	ldd	r22, Y+1	; 0x01
 174:	7a 81       	ldd	r23, Y+2	; 0x02
 176:	8b 81       	ldd	r24, Y+3	; 0x03
 178:	9c 81       	ldd	r25, Y+4	; 0x04
 17a:	84 d2       	rcall	.+1288   	; 0x684 <__mulsf3>
 17c:	dc 01       	movw	r26, r24
 17e:	cb 01       	movw	r24, r22
 180:	9c 01       	movw	r18, r24
 182:	ad 01       	movw	r20, r26
 184:	60 e0       	ldi	r22, 0x00	; 0
 186:	74 e2       	ldi	r23, 0x24	; 36
 188:	84 ef       	ldi	r24, 0xF4	; 244
 18a:	9a e4       	ldi	r25, 0x4A	; 74
 18c:	69 d1       	rcall	.+722    	; 0x460 <__divsf3>
 18e:	dc 01       	movw	r26, r24
 190:	cb 01       	movw	r24, r22
 192:	bc 01       	movw	r22, r24
 194:	cd 01       	movw	r24, r26
 196:	cc d1       	rcall	.+920    	; 0x530 <__fixsfsi>
 198:	dc 01       	movw	r26, r24
 19a:	cb 01       	movw	r24, r22
 19c:	81 50       	subi	r24, 0x01	; 1
 19e:	f8 01       	movw	r30, r16
 1a0:	80 83       	st	Z, r24
 1a2:	86 e4       	ldi	r24, 0x46	; 70
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	fc 01       	movw	r30, r24
 1a8:	10 82       	st	Z, r1
 1aa:	89 81       	ldd	r24, Y+1	; 0x01
 1ac:	9a 81       	ldd	r25, Y+2	; 0x02
 1ae:	ab 81       	ldd	r26, Y+3	; 0x03
 1b0:	bc 81       	ldd	r27, Y+4	; 0x04
 1b2:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <_edata>
 1b6:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <_edata+0x1>
 1ba:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <_edata+0x2>
 1be:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <_edata+0x3>
 1c2:	00 00       	nop
 1c4:	0f 90       	pop	r0
 1c6:	0f 90       	pop	r0
 1c8:	0f 90       	pop	r0
 1ca:	0f 90       	pop	r0
 1cc:	df 91       	pop	r29
 1ce:	cf 91       	pop	r28
 1d0:	1f 91       	pop	r17
 1d2:	0f 91       	pop	r16
 1d4:	08 95       	ret

000001d6 <PWM_on>:
 1d6:	cf 93       	push	r28
 1d8:	df 93       	push	r29
 1da:	cd b7       	in	r28, 0x3d	; 61
 1dc:	de b7       	in	r29, 0x3e	; 62
 1de:	84 e4       	ldi	r24, 0x44	; 68
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	20 e4       	ldi	r18, 0x40	; 64
 1e4:	fc 01       	movw	r30, r24
 1e6:	20 83       	st	Z, r18
 1e8:	85 e4       	ldi	r24, 0x45	; 69
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	2b e0       	ldi	r18, 0x0B	; 11
 1ee:	fc 01       	movw	r30, r24
 1f0:	20 83       	st	Z, r18
 1f2:	60 e0       	ldi	r22, 0x00	; 0
 1f4:	70 e0       	ldi	r23, 0x00	; 0
 1f6:	cb 01       	movw	r24, r22
 1f8:	5a df       	rcall	.-332    	; 0xae <set_PWM>
 1fa:	00 00       	nop
 1fc:	df 91       	pop	r29
 1fe:	cf 91       	pop	r28
 200:	08 95       	ret

00000202 <Speaker_Tick>:

typedef unsigned char uc;
typedef double db;

enum Speaker_States{SP_SMSTART, INIT, C4_FREQ, D4_FREQ, E4_FREQ} sp_state;
void Speaker_Tick(){
 202:	cf 93       	push	r28
 204:	df 93       	push	r29
 206:	cd b7       	in	r28, 0x3d	; 61
 208:	de b7       	in	r29, 0x3e	; 62
 20a:	62 97       	sbiw	r28, 0x12	; 18
 20c:	0f b6       	in	r0, 0x3f	; 63
 20e:	f8 94       	cli
 210:	de bf       	out	0x3e, r29	; 62
 212:	0f be       	out	0x3f, r0	; 63
 214:	cd bf       	out	0x3d, r28	; 61
	db C4 = 261.63; // f = 261.63
 216:	84 ea       	ldi	r24, 0xA4	; 164
 218:	90 ed       	ldi	r25, 0xD0	; 208
 21a:	a2 e8       	ldi	r26, 0x82	; 130
 21c:	b3 e4       	ldi	r27, 0x43	; 67
 21e:	8c 83       	std	Y+4, r24	; 0x04
 220:	9d 83       	std	Y+5, r25	; 0x05
 222:	ae 83       	std	Y+6, r26	; 0x06
 224:	bf 83       	std	Y+7, r27	; 0x07
	db D4 = 293.66; // f = 293.66
 226:	8b e7       	ldi	r24, 0x7B	; 123
 228:	94 ed       	ldi	r25, 0xD4	; 212
 22a:	a2 e9       	ldi	r26, 0x92	; 146
 22c:	b3 e4       	ldi	r27, 0x43	; 67
 22e:	88 87       	std	Y+8, r24	; 0x08
 230:	99 87       	std	Y+9, r25	; 0x09
 232:	aa 87       	std	Y+10, r26	; 0x0a
 234:	bb 87       	std	Y+11, r27	; 0x0b
	db E4 = 329.63; // f = 329.63
 236:	84 ea       	ldi	r24, 0xA4	; 164
 238:	90 ed       	ldi	r25, 0xD0	; 208
 23a:	a4 ea       	ldi	r26, 0xA4	; 164
 23c:	b3 e4       	ldi	r27, 0x43	; 67
 23e:	8c 87       	std	Y+12, r24	; 0x0c
 240:	9d 87       	std	Y+13, r25	; 0x0d
 242:	ae 87       	std	Y+14, r26	; 0x0e
 244:	bf 87       	std	Y+15, r27	; 0x0f
	unsigned char button0; // A0
	unsigned char button1; // A1
	unsigned char button2; // A2
	button0 = PINA & 0x01; // A0
 246:	80 e2       	ldi	r24, 0x20	; 32
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	fc 01       	movw	r30, r24
 24c:	80 81       	ld	r24, Z
 24e:	81 70       	andi	r24, 0x01	; 1
 250:	88 8b       	std	Y+16, r24	; 0x10
	button1 = PINA & 0x02; // A1
 252:	80 e2       	ldi	r24, 0x20	; 32
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	fc 01       	movw	r30, r24
 258:	80 81       	ld	r24, Z
 25a:	82 70       	andi	r24, 0x02	; 2
 25c:	89 8b       	std	Y+17, r24	; 0x11
	button2 = PINA & 0x04; // A2
 25e:	80 e2       	ldi	r24, 0x20	; 32
 260:	90 e0       	ldi	r25, 0x00	; 0
 262:	fc 01       	movw	r30, r24
 264:	80 81       	ld	r24, Z
 266:	84 70       	andi	r24, 0x04	; 4
 268:	8a 8b       	std	Y+18, r24	; 0x12

	uc button_check0=0;
 26a:	19 82       	std	Y+1, r1	; 0x01
	uc button_check1=0;
 26c:	1a 82       	std	Y+2, r1	; 0x02
	uc button_check2=0;
 26e:	1b 82       	std	Y+3, r1	; 0x03

	if ( (button0&&!button1&&!button2))
 270:	88 89       	ldd	r24, Y+16	; 0x10
 272:	88 23       	and	r24, r24
 274:	41 f0       	breq	.+16     	; 0x286 <Speaker_Tick+0x84>
 276:	89 89       	ldd	r24, Y+17	; 0x11
 278:	88 23       	and	r24, r24
 27a:	29 f4       	brne	.+10     	; 0x286 <Speaker_Tick+0x84>
 27c:	8a 89       	ldd	r24, Y+18	; 0x12
 27e:	88 23       	and	r24, r24
 280:	11 f4       	brne	.+4      	; 0x286 <Speaker_Tick+0x84>
	{
		button_check0 = 1;
 282:	81 e0       	ldi	r24, 0x01	; 1
 284:	89 83       	std	Y+1, r24	; 0x01
	}

	if ( (!button0&&button1&&!button2))
 286:	88 89       	ldd	r24, Y+16	; 0x10
 288:	88 23       	and	r24, r24
 28a:	41 f4       	brne	.+16     	; 0x29c <Speaker_Tick+0x9a>
 28c:	89 89       	ldd	r24, Y+17	; 0x11
 28e:	88 23       	and	r24, r24
 290:	29 f0       	breq	.+10     	; 0x29c <Speaker_Tick+0x9a>
 292:	8a 89       	ldd	r24, Y+18	; 0x12
 294:	88 23       	and	r24, r24
 296:	11 f4       	brne	.+4      	; 0x29c <Speaker_Tick+0x9a>
	{
		button_check1 = 1;
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	8a 83       	std	Y+2, r24	; 0x02
	}

	if ( (!button0&&!button1&&button2))
 29c:	88 89       	ldd	r24, Y+16	; 0x10
 29e:	88 23       	and	r24, r24
 2a0:	41 f4       	brne	.+16     	; 0x2b2 <Speaker_Tick+0xb0>
 2a2:	89 89       	ldd	r24, Y+17	; 0x11
 2a4:	88 23       	and	r24, r24
 2a6:	29 f4       	brne	.+10     	; 0x2b2 <Speaker_Tick+0xb0>
 2a8:	8a 89       	ldd	r24, Y+18	; 0x12
 2aa:	88 23       	and	r24, r24
 2ac:	11 f0       	breq	.+4      	; 0x2b2 <Speaker_Tick+0xb0>
	{
		button_check2 = 1;
 2ae:	81 e0       	ldi	r24, 0x01	; 1
 2b0:	8b 83       	std	Y+3, r24	; 0x03
	}
	
	switch(sp_state){
 2b2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <sp_state>
 2b6:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <sp_state+0x1>
 2ba:	82 30       	cpi	r24, 0x02	; 2
 2bc:	91 05       	cpc	r25, r1
 2be:	e1 f1       	breq	.+120    	; 0x338 <Speaker_Tick+0x136>
 2c0:	83 30       	cpi	r24, 0x03	; 3
 2c2:	91 05       	cpc	r25, r1
 2c4:	28 f4       	brcc	.+10     	; 0x2d0 <Speaker_Tick+0xce>
 2c6:	00 97       	sbiw	r24, 0x00	; 0
 2c8:	59 f0       	breq	.+22     	; 0x2e0 <Speaker_Tick+0xde>
 2ca:	01 97       	sbiw	r24, 0x01	; 1
 2cc:	81 f0       	breq	.+32     	; 0x2ee <Speaker_Tick+0xec>
				break;
			}
			else {sp_state = INIT;}
		break;
		default:
		break;
 2ce:	67 c0       	rjmp	.+206    	; 0x39e <Speaker_Tick+0x19c>
	if ( (!button0&&!button1&&button2))
	{
		button_check2 = 1;
	}
	
	switch(sp_state){
 2d0:	83 30       	cpi	r24, 0x03	; 3
 2d2:	91 05       	cpc	r25, r1
 2d4:	09 f4       	brne	.+2      	; 0x2d8 <Speaker_Tick+0xd6>
 2d6:	41 c0       	rjmp	.+130    	; 0x35a <Speaker_Tick+0x158>
 2d8:	04 97       	sbiw	r24, 0x04	; 4
 2da:	09 f4       	brne	.+2      	; 0x2de <Speaker_Tick+0xdc>
 2dc:	4f c0       	rjmp	.+158    	; 0x37c <Speaker_Tick+0x17a>
				break;
			}
			else {sp_state = INIT;}
		break;
		default:
		break;
 2de:	5f c0       	rjmp	.+190    	; 0x39e <Speaker_Tick+0x19c>
		button_check2 = 1;
	}
	
	switch(sp_state){
		case SP_SMSTART:
		sp_state = INIT;
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 2e8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
		break;
 2ec:	58 c0       	rjmp	.+176    	; 0x39e <Speaker_Tick+0x19c>
		case INIT:
			if (button_check0)
 2ee:	89 81       	ldd	r24, Y+1	; 0x01
 2f0:	88 23       	and	r24, r24
 2f2:	39 f0       	breq	.+14     	; 0x302 <Speaker_Tick+0x100>
			{
				sp_state = C4_FREQ;
 2f4:	82 e0       	ldi	r24, 0x02	; 2
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 2fc:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
				break;
 300:	4e c0       	rjmp	.+156    	; 0x39e <Speaker_Tick+0x19c>
			}
			if (button_check1)
 302:	8a 81       	ldd	r24, Y+2	; 0x02
 304:	88 23       	and	r24, r24
 306:	39 f0       	breq	.+14     	; 0x316 <Speaker_Tick+0x114>
			{
				sp_state = D4_FREQ;
 308:	83 e0       	ldi	r24, 0x03	; 3
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 310:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
				break;
 314:	44 c0       	rjmp	.+136    	; 0x39e <Speaker_Tick+0x19c>
			}
			if (button_check2)
 316:	8b 81       	ldd	r24, Y+3	; 0x03
 318:	88 23       	and	r24, r24
 31a:	39 f0       	breq	.+14     	; 0x32a <Speaker_Tick+0x128>
			{
				sp_state = E4_FREQ;
 31c:	84 e0       	ldi	r24, 0x04	; 4
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 324:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
				break;
 328:	3a c0       	rjmp	.+116    	; 0x39e <Speaker_Tick+0x19c>
			}
			sp_state = INIT;
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 332:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
			break;
 336:	33 c0       	rjmp	.+102    	; 0x39e <Speaker_Tick+0x19c>
		
		case C4_FREQ:
			if (button_check0)
 338:	89 81       	ldd	r24, Y+1	; 0x01
 33a:	88 23       	and	r24, r24
 33c:	39 f0       	breq	.+14     	; 0x34c <Speaker_Tick+0x14a>
			{
				sp_state = C4_FREQ;
 33e:	82 e0       	ldi	r24, 0x02	; 2
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 346:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
				break;
 34a:	29 c0       	rjmp	.+82     	; 0x39e <Speaker_Tick+0x19c>
			}
			else {sp_state = INIT;}
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 354:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
		break;
 358:	22 c0       	rjmp	.+68     	; 0x39e <Speaker_Tick+0x19c>
		case  D4_FREQ:
			if (button_check0)
 35a:	89 81       	ldd	r24, Y+1	; 0x01
 35c:	88 23       	and	r24, r24
 35e:	39 f0       	breq	.+14     	; 0x36e <Speaker_Tick+0x16c>
			{
				sp_state = D4_FREQ;
 360:	83 e0       	ldi	r24, 0x03	; 3
 362:	90 e0       	ldi	r25, 0x00	; 0
 364:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 368:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
				break;
 36c:	18 c0       	rjmp	.+48     	; 0x39e <Speaker_Tick+0x19c>
			}
			else {sp_state = INIT;}
 36e:	81 e0       	ldi	r24, 0x01	; 1
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 376:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
			break;
 37a:	11 c0       	rjmp	.+34     	; 0x39e <Speaker_Tick+0x19c>
		case  E4_FREQ:
			if (button_check0)
 37c:	89 81       	ldd	r24, Y+1	; 0x01
 37e:	88 23       	and	r24, r24
 380:	39 f0       	breq	.+14     	; 0x390 <Speaker_Tick+0x18e>
			{
				sp_state = E4_FREQ;
 382:	84 e0       	ldi	r24, 0x04	; 4
 384:	90 e0       	ldi	r25, 0x00	; 0
 386:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 38a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
				break;
 38e:	07 c0       	rjmp	.+14     	; 0x39e <Speaker_Tick+0x19c>
			}
			else {sp_state = INIT;}
 390:	81 e0       	ldi	r24, 0x01	; 1
 392:	90 e0       	ldi	r25, 0x00	; 0
 394:	90 93 05 01 	sts	0x0105, r25	; 0x800105 <sp_state+0x1>
 398:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <sp_state>
		break;
 39c:	00 00       	nop
		default:
		break;
	}
	
	switch(sp_state){
 39e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <sp_state>
 3a2:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <sp_state+0x1>
 3a6:	82 30       	cpi	r24, 0x02	; 2
 3a8:	91 05       	cpc	r25, r1
 3aa:	a1 f0       	breq	.+40     	; 0x3d4 <Speaker_Tick+0x1d2>
 3ac:	83 30       	cpi	r24, 0x03	; 3
 3ae:	91 05       	cpc	r25, r1
 3b0:	28 f4       	brcc	.+10     	; 0x3bc <Speaker_Tick+0x1ba>
 3b2:	00 97       	sbiw	r24, 0x00	; 0
 3b4:	51 f1       	breq	.+84     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 3b6:	01 97       	sbiw	r24, 0x01	; 1
 3b8:	39 f0       	breq	.+14     	; 0x3c8 <Speaker_Tick+0x1c6>
		case  E4_FREQ:
			set_PWM(E4);
			PWM_on();
		break;
		default:
		break;
 3ba:	28 c0       	rjmp	.+80     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
		break;
		default:
		break;
	}
	
	switch(sp_state){
 3bc:	83 30       	cpi	r24, 0x03	; 3
 3be:	91 05       	cpc	r25, r1
 3c0:	91 f0       	breq	.+36     	; 0x3e6 <Speaker_Tick+0x1e4>
 3c2:	04 97       	sbiw	r24, 0x04	; 4
 3c4:	c9 f0       	breq	.+50     	; 0x3f8 <Speaker_Tick+0x1f6>
		case  E4_FREQ:
			set_PWM(E4);
			PWM_on();
		break;
		default:
		break;
 3c6:	22 c0       	rjmp	.+68     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
	switch(sp_state){
		//State Actions
		case SP_SMSTART:
		break;
		case INIT:
			set_PWM(0);
 3c8:	60 e0       	ldi	r22, 0x00	; 0
 3ca:	70 e0       	ldi	r23, 0x00	; 0
 3cc:	cb 01       	movw	r24, r22
 3ce:	6f de       	rcall	.-802    	; 0xae <set_PWM>
			PWM_on();
 3d0:	02 df       	rcall	.-508    	; 0x1d6 <PWM_on>
 3d2:	1c c0       	rjmp	.+56     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
		break;
 3d4:	8c 81       	ldd	r24, Y+4	; 0x04
		case C4_FREQ:
			set_PWM(C4);
 3d6:	9d 81       	ldd	r25, Y+5	; 0x05
 3d8:	ae 81       	ldd	r26, Y+6	; 0x06
 3da:	bf 81       	ldd	r27, Y+7	; 0x07
 3dc:	bc 01       	movw	r22, r24
 3de:	cd 01       	movw	r24, r26
 3e0:	66 de       	rcall	.-820    	; 0xae <set_PWM>
			PWM_on();
 3e2:	f9 de       	rcall	.-526    	; 0x1d6 <PWM_on>
 3e4:	13 c0       	rjmp	.+38     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
		break;
 3e6:	88 85       	ldd	r24, Y+8	; 0x08
		case  D4_FREQ:
			set_PWM(D4);
 3e8:	99 85       	ldd	r25, Y+9	; 0x09
 3ea:	aa 85       	ldd	r26, Y+10	; 0x0a
 3ec:	bb 85       	ldd	r27, Y+11	; 0x0b
 3ee:	bc 01       	movw	r22, r24
 3f0:	cd 01       	movw	r24, r26
 3f2:	5d de       	rcall	.-838    	; 0xae <set_PWM>
			PWM_on();
 3f4:	f0 de       	rcall	.-544    	; 0x1d6 <PWM_on>
 3f6:	0a c0       	rjmp	.+20     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
		break;
 3f8:	8c 85       	ldd	r24, Y+12	; 0x0c
		case  E4_FREQ:
			set_PWM(E4);
 3fa:	9d 85       	ldd	r25, Y+13	; 0x0d
 3fc:	ae 85       	ldd	r26, Y+14	; 0x0e
 3fe:	bf 85       	ldd	r27, Y+15	; 0x0f
 400:	bc 01       	movw	r22, r24
 402:	cd 01       	movw	r24, r26
 404:	54 de       	rcall	.-856    	; 0xae <set_PWM>
			PWM_on();
 406:	e7 de       	rcall	.-562    	; 0x1d6 <PWM_on>
 408:	01 c0       	rjmp	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
		break;
 40a:	00 00       	nop
	}
	
	switch(sp_state){
		//State Actions
		case SP_SMSTART:
		break;
 40c:	00 00       	nop
		default:
		break;
	}

	
};
 40e:	62 96       	adiw	r28, 0x12	; 18
 410:	0f b6       	in	r0, 0x3f	; 63
 412:	f8 94       	cli
 414:	de bf       	out	0x3e, r29	; 62
 416:	0f be       	out	0x3f, r0	; 63
 418:	cd bf       	out	0x3d, r28	; 61
 41a:	df 91       	pop	r29
 41c:	cf 91       	pop	r28
 41e:	08 95       	ret

00000420 <main>:
 420:	cf 93       	push	r28
int main(void)
{
 422:	df 93       	push	r29
 424:	cd b7       	in	r28, 0x3d	; 61
 426:	de b7       	in	r29, 0x3e	; 62
	DDRB = 0xFF; //set port B to output
 428:	84 e2       	ldi	r24, 0x24	; 36
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	2f ef       	ldi	r18, 0xFF	; 255
 42e:	fc 01       	movw	r30, r24
 430:	20 83       	st	Z, r18
	PORTB = 0x00; //init port B to 0's
 432:	85 e2       	ldi	r24, 0x25	; 37
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	fc 01       	movw	r30, r24
 438:	10 82       	st	Z, r1
	DDRA = 0x00;
 43a:	81 e2       	ldi	r24, 0x21	; 33
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	fc 01       	movw	r30, r24
 440:	10 82       	st	Z, r1
	PORTA = 0xFF; // Configure port A's 8 pins as inputs
 442:	82 e2       	ldi	r24, 0x22	; 34
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	2f ef       	ldi	r18, 0xFF	; 255
 448:	fc 01       	movw	r30, r24
 44a:	20 83       	st	Z, r18
		sp_state = SP_SMSTART;
 44c:	10 92 05 01 	sts	0x0105, r1	; 0x800105 <sp_state+0x1>
 450:	10 92 04 01 	sts	0x0104, r1	; 0x800104 <sp_state>

	/* Replace with your application code */
	while (1)
	{
		Speaker_Tick();
 454:	d6 de       	rcall	.-596    	; 0x202 <Speaker_Tick>
	}
 456:	fe cf       	rjmp	.-4      	; 0x454 <main+0x34>

00000458 <__cmpsf2>:
 458:	9c d0       	rcall	.+312    	; 0x592 <__fp_cmp>
 45a:	08 f4       	brcc	.+2      	; 0x45e <__cmpsf2+0x6>
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	08 95       	ret

00000460 <__divsf3>:
 460:	0c d0       	rcall	.+24     	; 0x47a <__divsf3x>
 462:	d2 c0       	rjmp	.+420    	; 0x608 <__fp_round>
 464:	ca d0       	rcall	.+404    	; 0x5fa <__fp_pscB>
 466:	40 f0       	brcs	.+16     	; 0x478 <__divsf3+0x18>
 468:	c1 d0       	rcall	.+386    	; 0x5ec <__fp_pscA>
 46a:	30 f0       	brcs	.+12     	; 0x478 <__divsf3+0x18>
 46c:	21 f4       	brne	.+8      	; 0x476 <__divsf3+0x16>
 46e:	5f 3f       	cpi	r21, 0xFF	; 255
 470:	19 f0       	breq	.+6      	; 0x478 <__divsf3+0x18>
 472:	b3 c0       	rjmp	.+358    	; 0x5da <__fp_inf>
 474:	51 11       	cpse	r21, r1
 476:	fc c0       	rjmp	.+504    	; 0x670 <__fp_szero>
 478:	b6 c0       	rjmp	.+364    	; 0x5e6 <__fp_nan>

0000047a <__divsf3x>:
 47a:	d7 d0       	rcall	.+430    	; 0x62a <__fp_split3>
 47c:	98 f3       	brcs	.-26     	; 0x464 <__divsf3+0x4>

0000047e <__divsf3_pse>:
 47e:	99 23       	and	r25, r25
 480:	c9 f3       	breq	.-14     	; 0x474 <__divsf3+0x14>
 482:	55 23       	and	r21, r21
 484:	b1 f3       	breq	.-20     	; 0x472 <__divsf3+0x12>
 486:	95 1b       	sub	r25, r21
 488:	55 0b       	sbc	r21, r21
 48a:	bb 27       	eor	r27, r27
 48c:	aa 27       	eor	r26, r26
 48e:	62 17       	cp	r22, r18
 490:	73 07       	cpc	r23, r19
 492:	84 07       	cpc	r24, r20
 494:	38 f0       	brcs	.+14     	; 0x4a4 <__divsf3_pse+0x26>
 496:	9f 5f       	subi	r25, 0xFF	; 255
 498:	5f 4f       	sbci	r21, 0xFF	; 255
 49a:	22 0f       	add	r18, r18
 49c:	33 1f       	adc	r19, r19
 49e:	44 1f       	adc	r20, r20
 4a0:	aa 1f       	adc	r26, r26
 4a2:	a9 f3       	breq	.-22     	; 0x48e <__divsf3_pse+0x10>
 4a4:	33 d0       	rcall	.+102    	; 0x50c <__divsf3_pse+0x8e>
 4a6:	0e 2e       	mov	r0, r30
 4a8:	3a f0       	brmi	.+14     	; 0x4b8 <__divsf3_pse+0x3a>
 4aa:	e0 e8       	ldi	r30, 0x80	; 128
 4ac:	30 d0       	rcall	.+96     	; 0x50e <__divsf3_pse+0x90>
 4ae:	91 50       	subi	r25, 0x01	; 1
 4b0:	50 40       	sbci	r21, 0x00	; 0
 4b2:	e6 95       	lsr	r30
 4b4:	00 1c       	adc	r0, r0
 4b6:	ca f7       	brpl	.-14     	; 0x4aa <__divsf3_pse+0x2c>
 4b8:	29 d0       	rcall	.+82     	; 0x50c <__divsf3_pse+0x8e>
 4ba:	fe 2f       	mov	r31, r30
 4bc:	27 d0       	rcall	.+78     	; 0x50c <__divsf3_pse+0x8e>
 4be:	66 0f       	add	r22, r22
 4c0:	77 1f       	adc	r23, r23
 4c2:	88 1f       	adc	r24, r24
 4c4:	bb 1f       	adc	r27, r27
 4c6:	26 17       	cp	r18, r22
 4c8:	37 07       	cpc	r19, r23
 4ca:	48 07       	cpc	r20, r24
 4cc:	ab 07       	cpc	r26, r27
 4ce:	b0 e8       	ldi	r27, 0x80	; 128
 4d0:	09 f0       	breq	.+2      	; 0x4d4 <__divsf3_pse+0x56>
 4d2:	bb 0b       	sbc	r27, r27
 4d4:	80 2d       	mov	r24, r0
 4d6:	bf 01       	movw	r22, r30
 4d8:	ff 27       	eor	r31, r31
 4da:	93 58       	subi	r25, 0x83	; 131
 4dc:	5f 4f       	sbci	r21, 0xFF	; 255
 4de:	2a f0       	brmi	.+10     	; 0x4ea <__divsf3_pse+0x6c>
 4e0:	9e 3f       	cpi	r25, 0xFE	; 254
 4e2:	51 05       	cpc	r21, r1
 4e4:	68 f0       	brcs	.+26     	; 0x500 <__divsf3_pse+0x82>
 4e6:	79 c0       	rjmp	.+242    	; 0x5da <__fp_inf>
 4e8:	c3 c0       	rjmp	.+390    	; 0x670 <__fp_szero>
 4ea:	5f 3f       	cpi	r21, 0xFF	; 255
 4ec:	ec f3       	brlt	.-6      	; 0x4e8 <__divsf3_pse+0x6a>
 4ee:	98 3e       	cpi	r25, 0xE8	; 232
 4f0:	dc f3       	brlt	.-10     	; 0x4e8 <__divsf3_pse+0x6a>
 4f2:	86 95       	lsr	r24
 4f4:	77 95       	ror	r23
 4f6:	67 95       	ror	r22
 4f8:	b7 95       	ror	r27
 4fa:	f7 95       	ror	r31
 4fc:	9f 5f       	subi	r25, 0xFF	; 255
 4fe:	c9 f7       	brne	.-14     	; 0x4f2 <__divsf3_pse+0x74>
 500:	88 0f       	add	r24, r24
 502:	91 1d       	adc	r25, r1
 504:	96 95       	lsr	r25
 506:	87 95       	ror	r24
 508:	97 f9       	bld	r25, 7
 50a:	08 95       	ret
 50c:	e1 e0       	ldi	r30, 0x01	; 1
 50e:	66 0f       	add	r22, r22
 510:	77 1f       	adc	r23, r23
 512:	88 1f       	adc	r24, r24
 514:	bb 1f       	adc	r27, r27
 516:	62 17       	cp	r22, r18
 518:	73 07       	cpc	r23, r19
 51a:	84 07       	cpc	r24, r20
 51c:	ba 07       	cpc	r27, r26
 51e:	20 f0       	brcs	.+8      	; 0x528 <__divsf3_pse+0xaa>
 520:	62 1b       	sub	r22, r18
 522:	73 0b       	sbc	r23, r19
 524:	84 0b       	sbc	r24, r20
 526:	ba 0b       	sbc	r27, r26
 528:	ee 1f       	adc	r30, r30
 52a:	88 f7       	brcc	.-30     	; 0x50e <__divsf3_pse+0x90>
 52c:	e0 95       	com	r30
 52e:	08 95       	ret

00000530 <__fixsfsi>:
 530:	04 d0       	rcall	.+8      	; 0x53a <__fixunssfsi>
 532:	68 94       	set
 534:	b1 11       	cpse	r27, r1
 536:	9c c0       	rjmp	.+312    	; 0x670 <__fp_szero>
 538:	08 95       	ret

0000053a <__fixunssfsi>:
 53a:	7f d0       	rcall	.+254    	; 0x63a <__fp_splitA>
 53c:	88 f0       	brcs	.+34     	; 0x560 <__fixunssfsi+0x26>
 53e:	9f 57       	subi	r25, 0x7F	; 127
 540:	90 f0       	brcs	.+36     	; 0x566 <__fixunssfsi+0x2c>
 542:	b9 2f       	mov	r27, r25
 544:	99 27       	eor	r25, r25
 546:	b7 51       	subi	r27, 0x17	; 23
 548:	a0 f0       	brcs	.+40     	; 0x572 <__fixunssfsi+0x38>
 54a:	d1 f0       	breq	.+52     	; 0x580 <__fixunssfsi+0x46>
 54c:	66 0f       	add	r22, r22
 54e:	77 1f       	adc	r23, r23
 550:	88 1f       	adc	r24, r24
 552:	99 1f       	adc	r25, r25
 554:	1a f0       	brmi	.+6      	; 0x55c <__fixunssfsi+0x22>
 556:	ba 95       	dec	r27
 558:	c9 f7       	brne	.-14     	; 0x54c <__fixunssfsi+0x12>
 55a:	12 c0       	rjmp	.+36     	; 0x580 <__fixunssfsi+0x46>
 55c:	b1 30       	cpi	r27, 0x01	; 1
 55e:	81 f0       	breq	.+32     	; 0x580 <__fixunssfsi+0x46>
 560:	86 d0       	rcall	.+268    	; 0x66e <__fp_zero>
 562:	b1 e0       	ldi	r27, 0x01	; 1
 564:	08 95       	ret
 566:	83 c0       	rjmp	.+262    	; 0x66e <__fp_zero>
 568:	67 2f       	mov	r22, r23
 56a:	78 2f       	mov	r23, r24
 56c:	88 27       	eor	r24, r24
 56e:	b8 5f       	subi	r27, 0xF8	; 248
 570:	39 f0       	breq	.+14     	; 0x580 <__fixunssfsi+0x46>
 572:	b9 3f       	cpi	r27, 0xF9	; 249
 574:	cc f3       	brlt	.-14     	; 0x568 <__fixunssfsi+0x2e>
 576:	86 95       	lsr	r24
 578:	77 95       	ror	r23
 57a:	67 95       	ror	r22
 57c:	b3 95       	inc	r27
 57e:	d9 f7       	brne	.-10     	; 0x576 <__fixunssfsi+0x3c>
 580:	3e f4       	brtc	.+14     	; 0x590 <__fixunssfsi+0x56>
 582:	90 95       	com	r25
 584:	80 95       	com	r24
 586:	70 95       	com	r23
 588:	61 95       	neg	r22
 58a:	7f 4f       	sbci	r23, 0xFF	; 255
 58c:	8f 4f       	sbci	r24, 0xFF	; 255
 58e:	9f 4f       	sbci	r25, 0xFF	; 255
 590:	08 95       	ret

00000592 <__fp_cmp>:
 592:	99 0f       	add	r25, r25
 594:	00 08       	sbc	r0, r0
 596:	55 0f       	add	r21, r21
 598:	aa 0b       	sbc	r26, r26
 59a:	e0 e8       	ldi	r30, 0x80	; 128
 59c:	fe ef       	ldi	r31, 0xFE	; 254
 59e:	16 16       	cp	r1, r22
 5a0:	17 06       	cpc	r1, r23
 5a2:	e8 07       	cpc	r30, r24
 5a4:	f9 07       	cpc	r31, r25
 5a6:	c0 f0       	brcs	.+48     	; 0x5d8 <__fp_cmp+0x46>
 5a8:	12 16       	cp	r1, r18
 5aa:	13 06       	cpc	r1, r19
 5ac:	e4 07       	cpc	r30, r20
 5ae:	f5 07       	cpc	r31, r21
 5b0:	98 f0       	brcs	.+38     	; 0x5d8 <__fp_cmp+0x46>
 5b2:	62 1b       	sub	r22, r18
 5b4:	73 0b       	sbc	r23, r19
 5b6:	84 0b       	sbc	r24, r20
 5b8:	95 0b       	sbc	r25, r21
 5ba:	39 f4       	brne	.+14     	; 0x5ca <__fp_cmp+0x38>
 5bc:	0a 26       	eor	r0, r26
 5be:	61 f0       	breq	.+24     	; 0x5d8 <__fp_cmp+0x46>
 5c0:	23 2b       	or	r18, r19
 5c2:	24 2b       	or	r18, r20
 5c4:	25 2b       	or	r18, r21
 5c6:	21 f4       	brne	.+8      	; 0x5d0 <__fp_cmp+0x3e>
 5c8:	08 95       	ret
 5ca:	0a 26       	eor	r0, r26
 5cc:	09 f4       	brne	.+2      	; 0x5d0 <__fp_cmp+0x3e>
 5ce:	a1 40       	sbci	r26, 0x01	; 1
 5d0:	a6 95       	lsr	r26
 5d2:	8f ef       	ldi	r24, 0xFF	; 255
 5d4:	81 1d       	adc	r24, r1
 5d6:	81 1d       	adc	r24, r1
 5d8:	08 95       	ret

000005da <__fp_inf>:
 5da:	97 f9       	bld	r25, 7
 5dc:	9f 67       	ori	r25, 0x7F	; 127
 5de:	80 e8       	ldi	r24, 0x80	; 128
 5e0:	70 e0       	ldi	r23, 0x00	; 0
 5e2:	60 e0       	ldi	r22, 0x00	; 0
 5e4:	08 95       	ret

000005e6 <__fp_nan>:
 5e6:	9f ef       	ldi	r25, 0xFF	; 255
 5e8:	80 ec       	ldi	r24, 0xC0	; 192
 5ea:	08 95       	ret

000005ec <__fp_pscA>:
 5ec:	00 24       	eor	r0, r0
 5ee:	0a 94       	dec	r0
 5f0:	16 16       	cp	r1, r22
 5f2:	17 06       	cpc	r1, r23
 5f4:	18 06       	cpc	r1, r24
 5f6:	09 06       	cpc	r0, r25
 5f8:	08 95       	ret

000005fa <__fp_pscB>:
 5fa:	00 24       	eor	r0, r0
 5fc:	0a 94       	dec	r0
 5fe:	12 16       	cp	r1, r18
 600:	13 06       	cpc	r1, r19
 602:	14 06       	cpc	r1, r20
 604:	05 06       	cpc	r0, r21
 606:	08 95       	ret

00000608 <__fp_round>:
 608:	09 2e       	mov	r0, r25
 60a:	03 94       	inc	r0
 60c:	00 0c       	add	r0, r0
 60e:	11 f4       	brne	.+4      	; 0x614 <__fp_round+0xc>
 610:	88 23       	and	r24, r24
 612:	52 f0       	brmi	.+20     	; 0x628 <__fp_round+0x20>
 614:	bb 0f       	add	r27, r27
 616:	40 f4       	brcc	.+16     	; 0x628 <__fp_round+0x20>
 618:	bf 2b       	or	r27, r31
 61a:	11 f4       	brne	.+4      	; 0x620 <__fp_round+0x18>
 61c:	60 ff       	sbrs	r22, 0
 61e:	04 c0       	rjmp	.+8      	; 0x628 <__fp_round+0x20>
 620:	6f 5f       	subi	r22, 0xFF	; 255
 622:	7f 4f       	sbci	r23, 0xFF	; 255
 624:	8f 4f       	sbci	r24, 0xFF	; 255
 626:	9f 4f       	sbci	r25, 0xFF	; 255
 628:	08 95       	ret

0000062a <__fp_split3>:
 62a:	57 fd       	sbrc	r21, 7
 62c:	90 58       	subi	r25, 0x80	; 128
 62e:	44 0f       	add	r20, r20
 630:	55 1f       	adc	r21, r21
 632:	59 f0       	breq	.+22     	; 0x64a <__fp_splitA+0x10>
 634:	5f 3f       	cpi	r21, 0xFF	; 255
 636:	71 f0       	breq	.+28     	; 0x654 <__fp_splitA+0x1a>
 638:	47 95       	ror	r20

0000063a <__fp_splitA>:
 63a:	88 0f       	add	r24, r24
 63c:	97 fb       	bst	r25, 7
 63e:	99 1f       	adc	r25, r25
 640:	61 f0       	breq	.+24     	; 0x65a <__fp_splitA+0x20>
 642:	9f 3f       	cpi	r25, 0xFF	; 255
 644:	79 f0       	breq	.+30     	; 0x664 <__fp_splitA+0x2a>
 646:	87 95       	ror	r24
 648:	08 95       	ret
 64a:	12 16       	cp	r1, r18
 64c:	13 06       	cpc	r1, r19
 64e:	14 06       	cpc	r1, r20
 650:	55 1f       	adc	r21, r21
 652:	f2 cf       	rjmp	.-28     	; 0x638 <__fp_split3+0xe>
 654:	46 95       	lsr	r20
 656:	f1 df       	rcall	.-30     	; 0x63a <__fp_splitA>
 658:	08 c0       	rjmp	.+16     	; 0x66a <__fp_splitA+0x30>
 65a:	16 16       	cp	r1, r22
 65c:	17 06       	cpc	r1, r23
 65e:	18 06       	cpc	r1, r24
 660:	99 1f       	adc	r25, r25
 662:	f1 cf       	rjmp	.-30     	; 0x646 <__fp_splitA+0xc>
 664:	86 95       	lsr	r24
 666:	71 05       	cpc	r23, r1
 668:	61 05       	cpc	r22, r1
 66a:	08 94       	sec
 66c:	08 95       	ret

0000066e <__fp_zero>:
 66e:	e8 94       	clt

00000670 <__fp_szero>:
 670:	bb 27       	eor	r27, r27
 672:	66 27       	eor	r22, r22
 674:	77 27       	eor	r23, r23
 676:	cb 01       	movw	r24, r22
 678:	97 f9       	bld	r25, 7
 67a:	08 95       	ret

0000067c <__gesf2>:
 67c:	8a df       	rcall	.-236    	; 0x592 <__fp_cmp>
 67e:	08 f4       	brcc	.+2      	; 0x682 <__gesf2+0x6>
 680:	8f ef       	ldi	r24, 0xFF	; 255
 682:	08 95       	ret

00000684 <__mulsf3>:
 684:	0b d0       	rcall	.+22     	; 0x69c <__mulsf3x>
 686:	c0 cf       	rjmp	.-128    	; 0x608 <__fp_round>
 688:	b1 df       	rcall	.-158    	; 0x5ec <__fp_pscA>
 68a:	28 f0       	brcs	.+10     	; 0x696 <__mulsf3+0x12>
 68c:	b6 df       	rcall	.-148    	; 0x5fa <__fp_pscB>
 68e:	18 f0       	brcs	.+6      	; 0x696 <__mulsf3+0x12>
 690:	95 23       	and	r25, r21
 692:	09 f0       	breq	.+2      	; 0x696 <__mulsf3+0x12>
 694:	a2 cf       	rjmp	.-188    	; 0x5da <__fp_inf>
 696:	a7 cf       	rjmp	.-178    	; 0x5e6 <__fp_nan>
 698:	11 24       	eor	r1, r1
 69a:	ea cf       	rjmp	.-44     	; 0x670 <__fp_szero>

0000069c <__mulsf3x>:
 69c:	c6 df       	rcall	.-116    	; 0x62a <__fp_split3>
 69e:	a0 f3       	brcs	.-24     	; 0x688 <__mulsf3+0x4>

000006a0 <__mulsf3_pse>:
 6a0:	95 9f       	mul	r25, r21
 6a2:	d1 f3       	breq	.-12     	; 0x698 <__mulsf3+0x14>
 6a4:	95 0f       	add	r25, r21
 6a6:	50 e0       	ldi	r21, 0x00	; 0
 6a8:	55 1f       	adc	r21, r21
 6aa:	62 9f       	mul	r22, r18
 6ac:	f0 01       	movw	r30, r0
 6ae:	72 9f       	mul	r23, r18
 6b0:	bb 27       	eor	r27, r27
 6b2:	f0 0d       	add	r31, r0
 6b4:	b1 1d       	adc	r27, r1
 6b6:	63 9f       	mul	r22, r19
 6b8:	aa 27       	eor	r26, r26
 6ba:	f0 0d       	add	r31, r0
 6bc:	b1 1d       	adc	r27, r1
 6be:	aa 1f       	adc	r26, r26
 6c0:	64 9f       	mul	r22, r20
 6c2:	66 27       	eor	r22, r22
 6c4:	b0 0d       	add	r27, r0
 6c6:	a1 1d       	adc	r26, r1
 6c8:	66 1f       	adc	r22, r22
 6ca:	82 9f       	mul	r24, r18
 6cc:	22 27       	eor	r18, r18
 6ce:	b0 0d       	add	r27, r0
 6d0:	a1 1d       	adc	r26, r1
 6d2:	62 1f       	adc	r22, r18
 6d4:	73 9f       	mul	r23, r19
 6d6:	b0 0d       	add	r27, r0
 6d8:	a1 1d       	adc	r26, r1
 6da:	62 1f       	adc	r22, r18
 6dc:	83 9f       	mul	r24, r19
 6de:	a0 0d       	add	r26, r0
 6e0:	61 1d       	adc	r22, r1
 6e2:	22 1f       	adc	r18, r18
 6e4:	74 9f       	mul	r23, r20
 6e6:	33 27       	eor	r19, r19
 6e8:	a0 0d       	add	r26, r0
 6ea:	61 1d       	adc	r22, r1
 6ec:	23 1f       	adc	r18, r19
 6ee:	84 9f       	mul	r24, r20
 6f0:	60 0d       	add	r22, r0
 6f2:	21 1d       	adc	r18, r1
 6f4:	82 2f       	mov	r24, r18
 6f6:	76 2f       	mov	r23, r22
 6f8:	6a 2f       	mov	r22, r26
 6fa:	11 24       	eor	r1, r1
 6fc:	9f 57       	subi	r25, 0x7F	; 127
 6fe:	50 40       	sbci	r21, 0x00	; 0
 700:	8a f0       	brmi	.+34     	; 0x724 <__mulsf3_pse+0x84>
 702:	e1 f0       	breq	.+56     	; 0x73c <__mulsf3_pse+0x9c>
 704:	88 23       	and	r24, r24
 706:	4a f0       	brmi	.+18     	; 0x71a <__mulsf3_pse+0x7a>
 708:	ee 0f       	add	r30, r30
 70a:	ff 1f       	adc	r31, r31
 70c:	bb 1f       	adc	r27, r27
 70e:	66 1f       	adc	r22, r22
 710:	77 1f       	adc	r23, r23
 712:	88 1f       	adc	r24, r24
 714:	91 50       	subi	r25, 0x01	; 1
 716:	50 40       	sbci	r21, 0x00	; 0
 718:	a9 f7       	brne	.-22     	; 0x704 <__mulsf3_pse+0x64>
 71a:	9e 3f       	cpi	r25, 0xFE	; 254
 71c:	51 05       	cpc	r21, r1
 71e:	70 f0       	brcs	.+28     	; 0x73c <__mulsf3_pse+0x9c>
 720:	5c cf       	rjmp	.-328    	; 0x5da <__fp_inf>
 722:	a6 cf       	rjmp	.-180    	; 0x670 <__fp_szero>
 724:	5f 3f       	cpi	r21, 0xFF	; 255
 726:	ec f3       	brlt	.-6      	; 0x722 <__mulsf3_pse+0x82>
 728:	98 3e       	cpi	r25, 0xE8	; 232
 72a:	dc f3       	brlt	.-10     	; 0x722 <__mulsf3_pse+0x82>
 72c:	86 95       	lsr	r24
 72e:	77 95       	ror	r23
 730:	67 95       	ror	r22
 732:	b7 95       	ror	r27
 734:	f7 95       	ror	r31
 736:	e7 95       	ror	r30
 738:	9f 5f       	subi	r25, 0xFF	; 255
 73a:	c1 f7       	brne	.-16     	; 0x72c <__mulsf3_pse+0x8c>
 73c:	fe 2b       	or	r31, r30
 73e:	88 0f       	add	r24, r24
 740:	91 1d       	adc	r25, r1
 742:	96 95       	lsr	r25
 744:	87 95       	ror	r24
 746:	97 f9       	bld	r25, 7
 748:	08 95       	ret

0000074a <_exit>:
 74a:	f8 94       	cli

0000074c <__stop_program>:
 74c:	ff cf       	rjmp	.-2      	; 0x74c <__stop_program>
