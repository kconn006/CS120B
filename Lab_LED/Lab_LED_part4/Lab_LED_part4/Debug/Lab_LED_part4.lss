
Lab_LED_part4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000496  0000052a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000496  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  00800106  00800106  00000530  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000530  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000560  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  000005a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c0f  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008e7  00000000  00000000  0000122f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000079a  00000000  00000000  00001b16  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001f8  00000000  00000000  000022b0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000603  00000000  00000000  000024a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000041d  00000000  00000000  00002aab  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000070  00000000  00000000  00002ec8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	a2 c0       	rjmp	.+324    	; 0x17a <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e6 e9       	ldi	r30, 0x96	; 150
  a0:	f4 e0       	ldi	r31, 0x04	; 4
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 30       	cpi	r26, 0x06	; 6
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 e0       	ldi	r26, 0x06	; 6
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ad 30       	cpi	r26, 0x0D	; 13
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	a7 d1       	rcall	.+846    	; 0x412 <main>
  c4:	e6 c1       	rjmp	.+972    	; 0x492 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <matrix_display>:
		
		PORTA = turn_on;
		PORTB = column_num;
		
		 
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	00 d0       	rcall	.+0      	; 0xce <matrix_display+0x6>
  ce:	cd b7       	in	r28, 0x3d	; 61
  d0:	de b7       	in	r29, 0x3e	; 62
  d2:	89 83       	std	Y+1, r24	; 0x01
  d4:	6a 83       	std	Y+2, r22	; 0x02
  d6:	82 e2       	ldi	r24, 0x22	; 34
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	29 81       	ldd	r18, Y+1	; 0x01
  dc:	fc 01       	movw	r30, r24
  de:	20 83       	st	Z, r18
  e0:	85 e2       	ldi	r24, 0x25	; 37
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	2a 81       	ldd	r18, Y+2	; 0x02
  e6:	fc 01       	movw	r30, r24
  e8:	20 83       	st	Z, r18
  ea:	00 00       	nop
  ec:	0f 90       	pop	r0
  ee:	0f 90       	pop	r0
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	08 95       	ret

000000f6 <TimerOn>:
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	81 e8       	ldi	r24, 0x81	; 129
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	2b e0       	ldi	r18, 0x0B	; 11
 104:	fc 01       	movw	r30, r24
 106:	20 83       	st	Z, r18
 108:	88 e8       	ldi	r24, 0x88	; 136
 10a:	90 e0       	ldi	r25, 0x00	; 0
 10c:	2d e7       	ldi	r18, 0x7D	; 125
 10e:	30 e0       	ldi	r19, 0x00	; 0
 110:	fc 01       	movw	r30, r24
 112:	31 83       	std	Z+1, r19	; 0x01
 114:	20 83       	st	Z, r18
 116:	8f e6       	ldi	r24, 0x6F	; 111
 118:	90 e0       	ldi	r25, 0x00	; 0
 11a:	22 e0       	ldi	r18, 0x02	; 2
 11c:	fc 01       	movw	r30, r24
 11e:	20 83       	st	Z, r18
 120:	84 e8       	ldi	r24, 0x84	; 132
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	fc 01       	movw	r30, r24
 126:	11 82       	std	Z+1, r1	; 0x01
 128:	10 82       	st	Z, r1
 12a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 12e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 132:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 136:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 13a:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <_avr_timer_cntcurr>
 13e:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <_avr_timer_cntcurr+0x1>
 142:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <_avr_timer_cntcurr+0x2>
 146:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <_avr_timer_cntcurr+0x3>
 14a:	8f e5       	ldi	r24, 0x5F	; 95
 14c:	90 e0       	ldi	r25, 0x00	; 0
 14e:	2f e5       	ldi	r18, 0x5F	; 95
 150:	30 e0       	ldi	r19, 0x00	; 0
 152:	f9 01       	movw	r30, r18
 154:	20 81       	ld	r18, Z
 156:	20 68       	ori	r18, 0x80	; 128
 158:	fc 01       	movw	r30, r24
 15a:	20 83       	st	Z, r18
 15c:	00 00       	nop
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <TimerISR>:
 164:	cf 93       	push	r28
 166:	df 93       	push	r29
 168:	cd b7       	in	r28, 0x3d	; 61
 16a:	de b7       	in	r29, 0x3e	; 62
 16c:	81 e0       	ldi	r24, 0x01	; 1
 16e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <__data_end>
 172:	00 00       	nop
 174:	df 91       	pop	r29
 176:	cf 91       	pop	r28
 178:	08 95       	ret

0000017a <__vector_13>:
 17a:	1f 92       	push	r1
 17c:	0f 92       	push	r0
 17e:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 182:	0f 92       	push	r0
 184:	11 24       	eor	r1, r1
 186:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 18a:	0f 92       	push	r0
 18c:	2f 93       	push	r18
 18e:	3f 93       	push	r19
 190:	4f 93       	push	r20
 192:	5f 93       	push	r21
 194:	6f 93       	push	r22
 196:	7f 93       	push	r23
 198:	8f 93       	push	r24
 19a:	9f 93       	push	r25
 19c:	af 93       	push	r26
 19e:	bf 93       	push	r27
 1a0:	ef 93       	push	r30
 1a2:	ff 93       	push	r31
 1a4:	cf 93       	push	r28
 1a6:	df 93       	push	r29
 1a8:	cd b7       	in	r28, 0x3d	; 61
 1aa:	de b7       	in	r29, 0x3e	; 62
 1ac:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <_avr_timer_cntcurr>
 1b0:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <_avr_timer_cntcurr+0x1>
 1b4:	a0 91 09 01 	lds	r26, 0x0109	; 0x800109 <_avr_timer_cntcurr+0x2>
 1b8:	b0 91 0a 01 	lds	r27, 0x010A	; 0x80010a <_avr_timer_cntcurr+0x3>
 1bc:	01 97       	sbiw	r24, 0x01	; 1
 1be:	a1 09       	sbc	r26, r1
 1c0:	b1 09       	sbc	r27, r1
 1c2:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <_avr_timer_cntcurr>
 1c6:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <_avr_timer_cntcurr+0x1>
 1ca:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <_avr_timer_cntcurr+0x2>
 1ce:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <_avr_timer_cntcurr+0x3>
 1d2:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <_avr_timer_cntcurr>
 1d6:	90 91 08 01 	lds	r25, 0x0108	; 0x800108 <_avr_timer_cntcurr+0x1>
 1da:	a0 91 09 01 	lds	r26, 0x0109	; 0x800109 <_avr_timer_cntcurr+0x2>
 1de:	b0 91 0a 01 	lds	r27, 0x010A	; 0x80010a <_avr_timer_cntcurr+0x3>
 1e2:	89 2b       	or	r24, r25
 1e4:	8a 2b       	or	r24, r26
 1e6:	8b 2b       	or	r24, r27
 1e8:	89 f4       	brne	.+34     	; 0x20c <__vector_13+0x92>
 1ea:	bc df       	rcall	.-136    	; 0x164 <TimerISR>
 1ec:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 1f0:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1f4:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 1f8:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 1fc:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <_avr_timer_cntcurr>
 200:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <_avr_timer_cntcurr+0x1>
 204:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <_avr_timer_cntcurr+0x2>
 208:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <_avr_timer_cntcurr+0x3>
 20c:	00 00       	nop
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	ff 91       	pop	r31
 214:	ef 91       	pop	r30
 216:	bf 91       	pop	r27
 218:	af 91       	pop	r26
 21a:	9f 91       	pop	r25
 21c:	8f 91       	pop	r24
 21e:	7f 91       	pop	r23
 220:	6f 91       	pop	r22
 222:	5f 91       	pop	r21
 224:	4f 91       	pop	r20
 226:	3f 91       	pop	r19
 228:	2f 91       	pop	r18
 22a:	0f 90       	pop	r0
 22c:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 230:	0f 90       	pop	r0
 232:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 236:	0f 90       	pop	r0
 238:	1f 90       	pop	r1
 23a:	18 95       	reti

0000023c <TimerSet>:
 23c:	cf 93       	push	r28
 23e:	df 93       	push	r29
 240:	00 d0       	rcall	.+0      	; 0x242 <TimerSet+0x6>
 242:	00 d0       	rcall	.+0      	; 0x244 <TimerSet+0x8>
 244:	cd b7       	in	r28, 0x3d	; 61
 246:	de b7       	in	r29, 0x3e	; 62
 248:	69 83       	std	Y+1, r22	; 0x01
 24a:	7a 83       	std	Y+2, r23	; 0x02
 24c:	8b 83       	std	Y+3, r24	; 0x03
 24e:	9c 83       	std	Y+4, r25	; 0x04
 250:	89 81       	ldd	r24, Y+1	; 0x01
 252:	9a 81       	ldd	r25, Y+2	; 0x02
 254:	ab 81       	ldd	r26, Y+3	; 0x03
 256:	bc 81       	ldd	r27, Y+4	; 0x04
 258:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 25c:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 260:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 264:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 268:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 26c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 270:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 274:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 278:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <_avr_timer_cntcurr>
 27c:	90 93 08 01 	sts	0x0108, r25	; 0x800108 <_avr_timer_cntcurr+0x1>
 280:	a0 93 09 01 	sts	0x0109, r26	; 0x800109 <_avr_timer_cntcurr+0x2>
 284:	b0 93 0a 01 	sts	0x010A, r27	; 0x80010a <_avr_timer_cntcurr+0x3>
 288:	00 00       	nop
 28a:	0f 90       	pop	r0
 28c:	0f 90       	pop	r0
 28e:	0f 90       	pop	r0
 290:	0f 90       	pop	r0
 292:	df 91       	pop	r29
 294:	cf 91       	pop	r28
 296:	08 95       	ret

00000298 <Try_Tick2>:
 298:	cf 93       	push	r28
 29a:	df 93       	push	r29
 29c:	00 d0       	rcall	.+0      	; 0x29e <Try_Tick2+0x6>
 29e:	00 d0       	rcall	.+0      	; 0x2a0 <Try_Tick2+0x8>
 2a0:	00 d0       	rcall	.+0      	; 0x2a2 <Try_Tick2+0xa>
 2a2:	cd b7       	in	r28, 0x3d	; 61
 2a4:	de b7       	in	r29, 0x3e	; 62
 2a6:	9e 83       	std	Y+6, r25	; 0x06
 2a8:	8d 83       	std	Y+5, r24	; 0x05
 2aa:	86 e2       	ldi	r24, 0x26	; 38
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	fc 01       	movw	r30, r24
 2b0:	80 81       	ld	r24, Z
 2b2:	80 95       	com	r24
 2b4:	88 70       	andi	r24, 0x08	; 8
 2b6:	89 83       	std	Y+1, r24	; 0x01
 2b8:	86 e2       	ldi	r24, 0x26	; 38
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	fc 01       	movw	r30, r24
 2be:	80 81       	ld	r24, Z
 2c0:	80 95       	com	r24
 2c2:	80 71       	andi	r24, 0x10	; 16
 2c4:	8a 83       	std	Y+2, r24	; 0x02
 2c6:	87 e0       	ldi	r24, 0x07	; 7
 2c8:	8b 83       	std	Y+3, r24	; 0x03
 2ca:	80 ee       	ldi	r24, 0xE0	; 224
 2cc:	8c 83       	std	Y+4, r24	; 0x04
 2ce:	8d 81       	ldd	r24, Y+5	; 0x05
 2d0:	9e 81       	ldd	r25, Y+6	; 0x06
 2d2:	81 30       	cpi	r24, 0x01	; 1
 2d4:	91 05       	cpc	r25, r1
 2d6:	f9 f0       	breq	.+62     	; 0x316 <Try_Tick2+0x7e>
 2d8:	82 30       	cpi	r24, 0x02	; 2
 2da:	91 05       	cpc	r25, r1
 2dc:	1c f4       	brge	.+6      	; 0x2e4 <Try_Tick2+0x4c>
 2de:	89 2b       	or	r24, r25
 2e0:	39 f0       	breq	.+14     	; 0x2f0 <Try_Tick2+0x58>
 2e2:	35 c0       	rjmp	.+106    	; 0x34e <Try_Tick2+0xb6>
 2e4:	83 30       	cpi	r24, 0x03	; 3
 2e6:	91 05       	cpc	r25, r1
 2e8:	29 f1       	breq	.+74     	; 0x334 <Try_Tick2+0x9c>
 2ea:	04 97       	sbiw	r24, 0x04	; 4
 2ec:	59 f1       	breq	.+86     	; 0x344 <Try_Tick2+0xac>
 2ee:	2f c0       	rjmp	.+94     	; 0x34e <Try_Tick2+0xb6>
 2f0:	89 81       	ldd	r24, Y+1	; 0x01
 2f2:	88 23       	and	r24, r24
 2f4:	29 f0       	breq	.+10     	; 0x300 <Try_Tick2+0x68>
 2f6:	81 e0       	ldi	r24, 0x01	; 1
 2f8:	90 e0       	ldi	r25, 0x00	; 0
 2fa:	9e 83       	std	Y+6, r25	; 0x06
 2fc:	8d 83       	std	Y+5, r24	; 0x05
 2fe:	2f c0       	rjmp	.+94     	; 0x35e <Try_Tick2+0xc6>
 300:	8a 81       	ldd	r24, Y+2	; 0x02
 302:	88 23       	and	r24, r24
 304:	29 f0       	breq	.+10     	; 0x310 <Try_Tick2+0x78>
 306:	83 e0       	ldi	r24, 0x03	; 3
 308:	90 e0       	ldi	r25, 0x00	; 0
 30a:	9e 83       	std	Y+6, r25	; 0x06
 30c:	8d 83       	std	Y+5, r24	; 0x05
 30e:	27 c0       	rjmp	.+78     	; 0x35e <Try_Tick2+0xc6>
 310:	1e 82       	std	Y+6, r1	; 0x06
 312:	1d 82       	std	Y+5, r1	; 0x05
 314:	24 c0       	rjmp	.+72     	; 0x35e <Try_Tick2+0xc6>
 316:	89 81       	ldd	r24, Y+1	; 0x01
 318:	88 23       	and	r24, r24
 31a:	21 f4       	brne	.+8      	; 0x324 <Try_Tick2+0x8c>
 31c:	84 e0       	ldi	r24, 0x04	; 4
 31e:	90 e0       	ldi	r25, 0x00	; 0
 320:	9e 83       	std	Y+6, r25	; 0x06
 322:	8d 83       	std	Y+5, r24	; 0x05
 324:	89 81       	ldd	r24, Y+1	; 0x01
 326:	88 23       	and	r24, r24
 328:	b9 f0       	breq	.+46     	; 0x358 <Try_Tick2+0xc0>
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	9e 83       	std	Y+6, r25	; 0x06
 330:	8d 83       	std	Y+5, r24	; 0x05
 332:	12 c0       	rjmp	.+36     	; 0x358 <Try_Tick2+0xc0>
 334:	8a 81       	ldd	r24, Y+2	; 0x02
 336:	88 23       	and	r24, r24
 338:	89 f4       	brne	.+34     	; 0x35c <Try_Tick2+0xc4>
 33a:	84 e0       	ldi	r24, 0x04	; 4
 33c:	90 e0       	ldi	r25, 0x00	; 0
 33e:	9e 83       	std	Y+6, r25	; 0x06
 340:	8d 83       	std	Y+5, r24	; 0x05
 342:	0c c0       	rjmp	.+24     	; 0x35c <Try_Tick2+0xc4>
 344:	84 e0       	ldi	r24, 0x04	; 4
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	9e 83       	std	Y+6, r25	; 0x06
 34a:	8d 83       	std	Y+5, r24	; 0x05
 34c:	08 c0       	rjmp	.+16     	; 0x35e <Try_Tick2+0xc6>
 34e:	84 e0       	ldi	r24, 0x04	; 4
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	9e 83       	std	Y+6, r25	; 0x06
 354:	8d 83       	std	Y+5, r24	; 0x05
 356:	03 c0       	rjmp	.+6      	; 0x35e <Try_Tick2+0xc6>
 358:	00 00       	nop
 35a:	01 c0       	rjmp	.+2      	; 0x35e <Try_Tick2+0xc6>
 35c:	00 00       	nop
 35e:	8d 81       	ldd	r24, Y+5	; 0x05
 360:	9e 81       	ldd	r25, Y+6	; 0x06
 362:	81 30       	cpi	r24, 0x01	; 1
 364:	91 05       	cpc	r25, r1
 366:	a9 f0       	breq	.+42     	; 0x392 <Try_Tick2+0xfa>
 368:	82 30       	cpi	r24, 0x02	; 2
 36a:	91 05       	cpc	r25, r1
 36c:	1c f4       	brge	.+6      	; 0x374 <Try_Tick2+0xdc>
 36e:	89 2b       	or	r24, r25
 370:	39 f0       	breq	.+14     	; 0x380 <Try_Tick2+0xe8>
 372:	3e c0       	rjmp	.+124    	; 0x3f0 <Try_Tick2+0x158>
 374:	83 30       	cpi	r24, 0x03	; 3
 376:	91 05       	cpc	r25, r1
 378:	f9 f0       	breq	.+62     	; 0x3b8 <Try_Tick2+0x120>
 37a:	04 97       	sbiw	r24, 0x04	; 4
 37c:	81 f1       	breq	.+96     	; 0x3de <Try_Tick2+0x146>
 37e:	38 c0       	rjmp	.+112    	; 0x3f0 <Try_Tick2+0x158>
 380:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <try_turn_on2.1780>
 384:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <try_turn_on2.1780>
 388:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <try_column_num2.1781>
 38c:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <try_column_num2.1781>
 390:	2f c0       	rjmp	.+94     	; 0x3f0 <Try_Tick2+0x158>
 392:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <try_turn_on2.1780>
 396:	8b 81       	ldd	r24, Y+3	; 0x03
 398:	89 17       	cp	r24, r25
 39a:	28 f4       	brcc	.+10     	; 0x3a6 <Try_Tick2+0x10e>
 39c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <try_turn_on2.1780>
 3a0:	86 95       	lsr	r24
 3a2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <try_turn_on2.1780>
 3a6:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <try_turn_on2.1780>
 3aa:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <try_turn_on2.1780>
 3ae:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <try_column_num2.1781>
 3b2:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <try_column_num2.1781>
 3b6:	1c c0       	rjmp	.+56     	; 0x3f0 <Try_Tick2+0x158>
 3b8:	90 91 04 01 	lds	r25, 0x0104	; 0x800104 <try_turn_on2.1780>
 3bc:	8c 81       	ldd	r24, Y+4	; 0x04
 3be:	98 17       	cp	r25, r24
 3c0:	28 f4       	brcc	.+10     	; 0x3cc <Try_Tick2+0x134>
 3c2:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <try_turn_on2.1780>
 3c6:	88 0f       	add	r24, r24
 3c8:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <try_turn_on2.1780>
 3cc:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <try_turn_on2.1780>
 3d0:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <try_turn_on2.1780>
 3d4:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <try_column_num2.1781>
 3d8:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <try_column_num2.1781>
 3dc:	09 c0       	rjmp	.+18     	; 0x3f0 <Try_Tick2+0x158>
 3de:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <try_turn_on2.1780>
 3e2:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <try_turn_on2.1780>
 3e6:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <try_column_num2.1781>
 3ea:	80 93 05 01 	sts	0x0105, r24	; 0x800105 <try_column_num2.1781>
 3ee:	00 00       	nop
 3f0:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <try_column_num2.1781>
 3f4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <try_turn_on2.1780>
 3f8:	69 2f       	mov	r22, r25
 3fa:	66 de       	rcall	.-820    	; 0xc8 <matrix_display>
 3fc:	8d 81       	ldd	r24, Y+5	; 0x05
 3fe:	9e 81       	ldd	r25, Y+6	; 0x06
 400:	26 96       	adiw	r28, 0x06	; 6
 402:	0f b6       	in	r0, 0x3f	; 63
 404:	f8 94       	cli
 406:	de bf       	out	0x3e, r29	; 62
 408:	0f be       	out	0x3f, r0	; 63
 40a:	cd bf       	out	0x3d, r28	; 61
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	08 95       	ret

00000412 <main>:
int main(void)
{
 412:	cf 93       	push	r28
 414:	df 93       	push	r29
 416:	00 d0       	rcall	.+0      	; 0x418 <main+0x6>
 418:	00 d0       	rcall	.+0      	; 0x41a <main+0x8>
 41a:	cd b7       	in	r28, 0x3d	; 61
 41c:	de b7       	in	r29, 0x3e	; 62
	/* Replace with your application code */
	DDRA = 0xFF; //set port A to output
 41e:	81 e2       	ldi	r24, 0x21	; 33
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	2f ef       	ldi	r18, 0xFF	; 255
 424:	fc 01       	movw	r30, r24
 426:	20 83       	st	Z, r18
	PORTA = 0x00; //init port A to 0's
 428:	82 e2       	ldi	r24, 0x22	; 34
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	fc 01       	movw	r30, r24
 42e:	10 82       	st	Z, r1
	DDRB = 0xFF; //set port B to output
 430:	84 e2       	ldi	r24, 0x24	; 36
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	2f ef       	ldi	r18, 0xFF	; 255
 436:	fc 01       	movw	r30, r24
 438:	20 83       	st	Z, r18
	PORTB = 0x00; //init port B to 0's
 43a:	85 e2       	ldi	r24, 0x25	; 37
 43c:	90 e0       	ldi	r25, 0x00	; 0
 43e:	fc 01       	movw	r30, r24
 440:	10 82       	st	Z, r1
	DDRC = 0x00; //set port C to intput
 442:	87 e2       	ldi	r24, 0x27	; 39
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	fc 01       	movw	r30, r24
 448:	10 82       	st	Z, r1
	PORTC = 0xFF; //init port C to 1's
 44a:	88 e2       	ldi	r24, 0x28	; 40
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	2f ef       	ldi	r18, 0xFF	; 255
 450:	fc 01       	movw	r30, r24
 452:	20 83       	st	Z, r18
	
	
	const unsigned long timerPeriod =100;
 454:	84 e6       	ldi	r24, 0x64	; 100
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	a0 e0       	ldi	r26, 0x00	; 0
 45a:	b0 e0       	ldi	r27, 0x00	; 0
 45c:	89 83       	std	Y+1, r24	; 0x01
 45e:	9a 83       	std	Y+2, r25	; 0x02
 460:	ab 83       	std	Y+3, r26	; 0x03
 462:	bc 83       	std	Y+4, r27	; 0x04

	TimerSet(timerPeriod);
 464:	89 81       	ldd	r24, Y+1	; 0x01
 466:	9a 81       	ldd	r25, Y+2	; 0x02
 468:	ab 81       	ldd	r26, Y+3	; 0x03
 46a:	bc 81       	ldd	r27, Y+4	; 0x04
 46c:	bc 01       	movw	r22, r24
 46e:	cd 01       	movw	r24, r26
 470:	e5 de       	rcall	.-566    	; 0x23c <TimerSet>
	TimerOn();	
 472:	41 de       	rcall	.-894    	; 0xf6 <TimerOn>
 474:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <ms_state+0x1>
	ms_state = MS_START;
 478:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <ms_state>
 47c:	80 e0       	ldi	r24, 0x00	; 0
	while (1)
	{
		//SM1_Tick(sm1_display);
		//MakeSquare_Tick();
		//Try_Tick(try_display);
		Try_Tick2(try_display2);
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	0b df       	rcall	.-490    	; 0x298 <Try_Tick2>
 482:	00 00       	nop
		while(!TimerFlag); //wait 1 sec
 484:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__data_end>
 488:	88 23       	and	r24, r24
 48a:	e1 f3       	breq	.-8      	; 0x484 <main+0x72>
 48c:	10 92 06 01 	sts	0x0106, r1	; 0x800106 <__data_end>
		TimerFlag = 0;
 490:	f5 cf       	rjmp	.-22     	; 0x47c <main+0x6a>

00000492 <_exit>:
	}
 492:	f8 94       	cli

00000494 <__stop_program>:
 494:	ff cf       	rjmp	.-2      	; 0x494 <__stop_program>
