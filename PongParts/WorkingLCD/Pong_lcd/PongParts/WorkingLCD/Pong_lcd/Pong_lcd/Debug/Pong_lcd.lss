
Pong_lcd.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006c  00800100  000008b4  00000948  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008b4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001d  0080016c  0080016c  000009b4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000009e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00000a24  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011d0  00000000  00000000  00000b34  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000093f  00000000  00000000  00001d04  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ea5  00000000  00000000  00002643  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000044c  00000000  00000000  000034e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008aa  00000000  00000000  00003934  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000092b  00000000  00000000  000041de  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000100  00000000  00000000  00004b09  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	b9 c0       	rjmp	.+370    	; 0x1a8 <__vector_13>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e4 eb       	ldi	r30, 0xB4	; 180
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 36       	cpi	r26, 0x6C	; 108
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	ac e6       	ldi	r26, 0x6C	; 108
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a9 38       	cpi	r26, 0x89	; 137
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d5 d2       	rcall	.+1450   	; 0x66e <main>
  c4:	f5 c3       	rjmp	.+2026   	; 0x8b0 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <TimerSet>:
			Try_Tick(try_display);		
			//Will display 3 light paddle on left side of screen
			break;
	}
	
}
  c8:	cf 93       	push	r28
  ca:	df 93       	push	r29
  cc:	00 d0       	rcall	.+0      	; 0xce <TimerSet+0x6>
  ce:	00 d0       	rcall	.+0      	; 0xd0 <TimerSet+0x8>
  d0:	cd b7       	in	r28, 0x3d	; 61
  d2:	de b7       	in	r29, 0x3e	; 62
  d4:	69 83       	std	Y+1, r22	; 0x01
  d6:	7a 83       	std	Y+2, r23	; 0x02
  d8:	8b 83       	std	Y+3, r24	; 0x03
  da:	9c 83       	std	Y+4, r25	; 0x04
  dc:	89 81       	ldd	r24, Y+1	; 0x01
  de:	9a 81       	ldd	r25, Y+2	; 0x02
  e0:	ab 81       	ldd	r26, Y+3	; 0x03
  e2:	bc 81       	ldd	r27, Y+4	; 0x04
  e4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
  e8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
  ec:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
  f0:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
  f4:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
  f8:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
  fc:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 100:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 104:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <_avr_timer_cntcurr>
 108:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <_avr_timer_cntcurr+0x1>
 10c:	a0 93 6f 01 	sts	0x016F, r26	; 0x80016f <_avr_timer_cntcurr+0x2>
 110:	b0 93 70 01 	sts	0x0170, r27	; 0x800170 <_avr_timer_cntcurr+0x3>
 114:	00 00       	nop
 116:	0f 90       	pop	r0
 118:	0f 90       	pop	r0
 11a:	0f 90       	pop	r0
 11c:	0f 90       	pop	r0
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	08 95       	ret

00000124 <TimerOn>:
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	cd b7       	in	r28, 0x3d	; 61
 12a:	de b7       	in	r29, 0x3e	; 62
 12c:	81 e8       	ldi	r24, 0x81	; 129
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	2b e0       	ldi	r18, 0x0B	; 11
 132:	fc 01       	movw	r30, r24
 134:	20 83       	st	Z, r18
 136:	88 e8       	ldi	r24, 0x88	; 136
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	2d e7       	ldi	r18, 0x7D	; 125
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	fc 01       	movw	r30, r24
 140:	31 83       	std	Z+1, r19	; 0x01
 142:	20 83       	st	Z, r18
 144:	8f e6       	ldi	r24, 0x6F	; 111
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	22 e0       	ldi	r18, 0x02	; 2
 14a:	fc 01       	movw	r30, r24
 14c:	20 83       	st	Z, r18
 14e:	84 e8       	ldi	r24, 0x84	; 132
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	fc 01       	movw	r30, r24
 154:	11 82       	std	Z+1, r1	; 0x01
 156:	10 82       	st	Z, r1
 158:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 15c:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 160:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 164:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 168:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <_avr_timer_cntcurr>
 16c:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <_avr_timer_cntcurr+0x1>
 170:	a0 93 6f 01 	sts	0x016F, r26	; 0x80016f <_avr_timer_cntcurr+0x2>
 174:	b0 93 70 01 	sts	0x0170, r27	; 0x800170 <_avr_timer_cntcurr+0x3>
 178:	8f e5       	ldi	r24, 0x5F	; 95
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	2f e5       	ldi	r18, 0x5F	; 95
 17e:	30 e0       	ldi	r19, 0x00	; 0
 180:	f9 01       	movw	r30, r18
 182:	20 81       	ld	r18, Z
 184:	20 68       	ori	r18, 0x80	; 128
 186:	fc 01       	movw	r30, r24
 188:	20 83       	st	Z, r18
 18a:	00 00       	nop
 18c:	df 91       	pop	r29
 18e:	cf 91       	pop	r28
 190:	08 95       	ret

00000192 <TimerISR>:
 192:	cf 93       	push	r28
 194:	df 93       	push	r29
 196:	cd b7       	in	r28, 0x3d	; 61
 198:	de b7       	in	r29, 0x3e	; 62
 19a:	81 e0       	ldi	r24, 0x01	; 1
 19c:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <__data_end>
 1a0:	00 00       	nop
 1a2:	df 91       	pop	r29
 1a4:	cf 91       	pop	r28
 1a6:	08 95       	ret

000001a8 <__vector_13>:
 1a8:	1f 92       	push	r1
 1aa:	0f 92       	push	r0
 1ac:	00 90 5f 00 	lds	r0, 0x005F	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 1b0:	0f 92       	push	r0
 1b2:	11 24       	eor	r1, r1
 1b4:	00 90 5b 00 	lds	r0, 0x005B	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 1b8:	0f 92       	push	r0
 1ba:	2f 93       	push	r18
 1bc:	3f 93       	push	r19
 1be:	4f 93       	push	r20
 1c0:	5f 93       	push	r21
 1c2:	6f 93       	push	r22
 1c4:	7f 93       	push	r23
 1c6:	8f 93       	push	r24
 1c8:	9f 93       	push	r25
 1ca:	af 93       	push	r26
 1cc:	bf 93       	push	r27
 1ce:	ef 93       	push	r30
 1d0:	ff 93       	push	r31
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	cd b7       	in	r28, 0x3d	; 61
 1d8:	de b7       	in	r29, 0x3e	; 62
 1da:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <_avr_timer_cntcurr>
 1de:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <_avr_timer_cntcurr+0x1>
 1e2:	a0 91 6f 01 	lds	r26, 0x016F	; 0x80016f <_avr_timer_cntcurr+0x2>
 1e6:	b0 91 70 01 	lds	r27, 0x0170	; 0x800170 <_avr_timer_cntcurr+0x3>
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	a1 09       	sbc	r26, r1
 1ee:	b1 09       	sbc	r27, r1
 1f0:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <_avr_timer_cntcurr>
 1f4:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <_avr_timer_cntcurr+0x1>
 1f8:	a0 93 6f 01 	sts	0x016F, r26	; 0x80016f <_avr_timer_cntcurr+0x2>
 1fc:	b0 93 70 01 	sts	0x0170, r27	; 0x800170 <_avr_timer_cntcurr+0x3>
 200:	80 91 6d 01 	lds	r24, 0x016D	; 0x80016d <_avr_timer_cntcurr>
 204:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <_avr_timer_cntcurr+0x1>
 208:	a0 91 6f 01 	lds	r26, 0x016F	; 0x80016f <_avr_timer_cntcurr+0x2>
 20c:	b0 91 70 01 	lds	r27, 0x0170	; 0x800170 <_avr_timer_cntcurr+0x3>
 210:	89 2b       	or	r24, r25
 212:	8a 2b       	or	r24, r26
 214:	8b 2b       	or	r24, r27
 216:	89 f4       	brne	.+34     	; 0x23a <__vector_13+0x92>
 218:	bc df       	rcall	.-136    	; 0x192 <TimerISR>
 21a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 21e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 222:	a0 91 02 01 	lds	r26, 0x0102	; 0x800102 <__data_start+0x2>
 226:	b0 91 03 01 	lds	r27, 0x0103	; 0x800103 <__data_start+0x3>
 22a:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <_avr_timer_cntcurr>
 22e:	90 93 6e 01 	sts	0x016E, r25	; 0x80016e <_avr_timer_cntcurr+0x1>
 232:	a0 93 6f 01 	sts	0x016F, r26	; 0x80016f <_avr_timer_cntcurr+0x2>
 236:	b0 93 70 01 	sts	0x0170, r27	; 0x800170 <_avr_timer_cntcurr+0x3>
 23a:	00 00       	nop
 23c:	df 91       	pop	r29
 23e:	cf 91       	pop	r28
 240:	ff 91       	pop	r31
 242:	ef 91       	pop	r30
 244:	bf 91       	pop	r27
 246:	af 91       	pop	r26
 248:	9f 91       	pop	r25
 24a:	8f 91       	pop	r24
 24c:	7f 91       	pop	r23
 24e:	6f 91       	pop	r22
 250:	5f 91       	pop	r21
 252:	4f 91       	pop	r20
 254:	3f 91       	pop	r19
 256:	2f 91       	pop	r18
 258:	0f 90       	pop	r0
 25a:	00 92 5b 00 	sts	0x005B, r0	; 0x80005b <__TEXT_REGION_LENGTH__+0x7e005b>
 25e:	0f 90       	pop	r0
 260:	00 92 5f 00 	sts	0x005F, r0	; 0x80005f <__TEXT_REGION_LENGTH__+0x7e005f>
 264:	0f 90       	pop	r0
 266:	1f 90       	pop	r1
 268:	18 95       	reti

0000026a <LCD_ClearScreen>:
 26a:	cf 93       	push	r28
 26c:	df 93       	push	r29
 26e:	cd b7       	in	r28, 0x3d	; 61
 270:	de b7       	in	r29, 0x3e	; 62
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	1a d0       	rcall	.+52     	; 0x2aa <LCD_WriteCommand>
 276:	00 00       	nop
 278:	df 91       	pop	r29
 27a:	cf 91       	pop	r28
 27c:	08 95       	ret

0000027e <LCD_init>:
 27e:	cf 93       	push	r28
 280:	df 93       	push	r29
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 286:	84 e6       	ldi	r24, 0x64	; 100
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	ac d0       	rcall	.+344    	; 0x3e4 <delay_ms>
 28c:	88 e3       	ldi	r24, 0x38	; 56
 28e:	0d d0       	rcall	.+26     	; 0x2aa <LCD_WriteCommand>
 290:	86 e0       	ldi	r24, 0x06	; 6
 292:	0b d0       	rcall	.+22     	; 0x2aa <LCD_WriteCommand>
 294:	8f e0       	ldi	r24, 0x0F	; 15
 296:	09 d0       	rcall	.+18     	; 0x2aa <LCD_WriteCommand>
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	07 d0       	rcall	.+14     	; 0x2aa <LCD_WriteCommand>
 29c:	8a e0       	ldi	r24, 0x0A	; 10
 29e:	90 e0       	ldi	r25, 0x00	; 0
 2a0:	a1 d0       	rcall	.+322    	; 0x3e4 <delay_ms>
 2a2:	00 00       	nop
 2a4:	df 91       	pop	r29
 2a6:	cf 91       	pop	r28
 2a8:	08 95       	ret

000002aa <LCD_WriteCommand>:
 2aa:	cf 93       	push	r28
 2ac:	df 93       	push	r29
 2ae:	1f 92       	push	r1
 2b0:	cd b7       	in	r28, 0x3d	; 61
 2b2:	de b7       	in	r29, 0x3e	; 62
 2b4:	89 83       	std	Y+1, r24	; 0x01
 2b6:	88 e2       	ldi	r24, 0x28	; 40
 2b8:	90 e0       	ldi	r25, 0x00	; 0
 2ba:	28 e2       	ldi	r18, 0x28	; 40
 2bc:	30 e0       	ldi	r19, 0x00	; 0
 2be:	f9 01       	movw	r30, r18
 2c0:	20 81       	ld	r18, Z
 2c2:	2f 77       	andi	r18, 0x7F	; 127
 2c4:	fc 01       	movw	r30, r24
 2c6:	20 83       	st	Z, r18
 2c8:	8b e2       	ldi	r24, 0x2B	; 43
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	29 81       	ldd	r18, Y+1	; 0x01
 2ce:	fc 01       	movw	r30, r24
 2d0:	20 83       	st	Z, r18
 2d2:	88 e2       	ldi	r24, 0x28	; 40
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	28 e2       	ldi	r18, 0x28	; 40
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	f9 01       	movw	r30, r18
 2dc:	20 81       	ld	r18, Z
 2de:	20 64       	ori	r18, 0x40	; 64
 2e0:	fc 01       	movw	r30, r24
 2e2:	20 83       	st	Z, r18
 2e4:	00 00       	nop
 2e6:	88 e2       	ldi	r24, 0x28	; 40
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	28 e2       	ldi	r18, 0x28	; 40
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	f9 01       	movw	r30, r18
 2f0:	20 81       	ld	r18, Z
 2f2:	2f 7b       	andi	r18, 0xBF	; 191
 2f4:	fc 01       	movw	r30, r24
 2f6:	20 83       	st	Z, r18
 2f8:	82 e0       	ldi	r24, 0x02	; 2
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	73 d0       	rcall	.+230    	; 0x3e4 <delay_ms>
 2fe:	00 00       	nop
 300:	0f 90       	pop	r0
 302:	df 91       	pop	r29
 304:	cf 91       	pop	r28
 306:	08 95       	ret

00000308 <LCD_WriteData>:
 308:	cf 93       	push	r28
 30a:	df 93       	push	r29
 30c:	1f 92       	push	r1
 30e:	cd b7       	in	r28, 0x3d	; 61
 310:	de b7       	in	r29, 0x3e	; 62
 312:	89 83       	std	Y+1, r24	; 0x01
 314:	88 e2       	ldi	r24, 0x28	; 40
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	28 e2       	ldi	r18, 0x28	; 40
 31a:	30 e0       	ldi	r19, 0x00	; 0
 31c:	f9 01       	movw	r30, r18
 31e:	20 81       	ld	r18, Z
 320:	20 68       	ori	r18, 0x80	; 128
 322:	fc 01       	movw	r30, r24
 324:	20 83       	st	Z, r18
 326:	8b e2       	ldi	r24, 0x2B	; 43
 328:	90 e0       	ldi	r25, 0x00	; 0
 32a:	29 81       	ldd	r18, Y+1	; 0x01
 32c:	fc 01       	movw	r30, r24
 32e:	20 83       	st	Z, r18
 330:	88 e2       	ldi	r24, 0x28	; 40
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	28 e2       	ldi	r18, 0x28	; 40
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	f9 01       	movw	r30, r18
 33a:	20 81       	ld	r18, Z
 33c:	20 64       	ori	r18, 0x40	; 64
 33e:	fc 01       	movw	r30, r24
 340:	20 83       	st	Z, r18
 342:	00 00       	nop
 344:	88 e2       	ldi	r24, 0x28	; 40
 346:	90 e0       	ldi	r25, 0x00	; 0
 348:	28 e2       	ldi	r18, 0x28	; 40
 34a:	30 e0       	ldi	r19, 0x00	; 0
 34c:	f9 01       	movw	r30, r18
 34e:	20 81       	ld	r18, Z
 350:	2f 7b       	andi	r18, 0xBF	; 191
 352:	fc 01       	movw	r30, r24
 354:	20 83       	st	Z, r18
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	90 e0       	ldi	r25, 0x00	; 0
 35a:	44 d0       	rcall	.+136    	; 0x3e4 <delay_ms>
 35c:	00 00       	nop
 35e:	0f 90       	pop	r0
 360:	df 91       	pop	r29
 362:	cf 91       	pop	r28
 364:	08 95       	ret

00000366 <LCD_DisplayString>:
 366:	cf 93       	push	r28
 368:	df 93       	push	r29
 36a:	00 d0       	rcall	.+0      	; 0x36c <LCD_DisplayString+0x6>
 36c:	00 d0       	rcall	.+0      	; 0x36e <LCD_DisplayString+0x8>
 36e:	cd b7       	in	r28, 0x3d	; 61
 370:	de b7       	in	r29, 0x3e	; 62
 372:	8a 83       	std	Y+2, r24	; 0x02
 374:	7c 83       	std	Y+4, r23	; 0x04
 376:	6b 83       	std	Y+3, r22	; 0x03
 378:	78 df       	rcall	.-272    	; 0x26a <LCD_ClearScreen>
 37a:	8a 81       	ldd	r24, Y+2	; 0x02
 37c:	89 83       	std	Y+1, r24	; 0x01
 37e:	0f c0       	rjmp	.+30     	; 0x39e <LCD_DisplayString+0x38>
 380:	89 81       	ldd	r24, Y+1	; 0x01
 382:	91 e0       	ldi	r25, 0x01	; 1
 384:	98 0f       	add	r25, r24
 386:	99 83       	std	Y+1, r25	; 0x01
 388:	18 d0       	rcall	.+48     	; 0x3ba <LCD_Cursor>
 38a:	8b 81       	ldd	r24, Y+3	; 0x03
 38c:	9c 81       	ldd	r25, Y+4	; 0x04
 38e:	9c 01       	movw	r18, r24
 390:	2f 5f       	subi	r18, 0xFF	; 255
 392:	3f 4f       	sbci	r19, 0xFF	; 255
 394:	3c 83       	std	Y+4, r19	; 0x04
 396:	2b 83       	std	Y+3, r18	; 0x03
 398:	fc 01       	movw	r30, r24
 39a:	80 81       	ld	r24, Z
 39c:	b5 df       	rcall	.-150    	; 0x308 <LCD_WriteData>
 39e:	8b 81       	ldd	r24, Y+3	; 0x03
 3a0:	9c 81       	ldd	r25, Y+4	; 0x04
 3a2:	fc 01       	movw	r30, r24
 3a4:	80 81       	ld	r24, Z
 3a6:	88 23       	and	r24, r24
 3a8:	59 f7       	brne	.-42     	; 0x380 <LCD_DisplayString+0x1a>
 3aa:	00 00       	nop
 3ac:	0f 90       	pop	r0
 3ae:	0f 90       	pop	r0
 3b0:	0f 90       	pop	r0
 3b2:	0f 90       	pop	r0
 3b4:	df 91       	pop	r29
 3b6:	cf 91       	pop	r28
 3b8:	08 95       	ret

000003ba <LCD_Cursor>:
 3ba:	cf 93       	push	r28
 3bc:	df 93       	push	r29
 3be:	1f 92       	push	r1
 3c0:	cd b7       	in	r28, 0x3d	; 61
 3c2:	de b7       	in	r29, 0x3e	; 62
 3c4:	89 83       	std	Y+1, r24	; 0x01
 3c6:	89 81       	ldd	r24, Y+1	; 0x01
 3c8:	81 31       	cpi	r24, 0x11	; 17
 3ca:	20 f4       	brcc	.+8      	; 0x3d4 <LCD_Cursor+0x1a>
 3cc:	89 81       	ldd	r24, Y+1	; 0x01
 3ce:	81 58       	subi	r24, 0x81	; 129
 3d0:	6c df       	rcall	.-296    	; 0x2aa <LCD_WriteCommand>
 3d2:	03 c0       	rjmp	.+6      	; 0x3da <LCD_Cursor+0x20>
 3d4:	89 81       	ldd	r24, Y+1	; 0x01
 3d6:	81 55       	subi	r24, 0x51	; 81
 3d8:	68 df       	rcall	.-304    	; 0x2aa <LCD_WriteCommand>
 3da:	00 00       	nop
 3dc:	0f 90       	pop	r0
 3de:	df 91       	pop	r29
 3e0:	cf 91       	pop	r28
 3e2:	08 95       	ret

000003e4 <delay_ms>:
 3e4:	cf 93       	push	r28
 3e6:	df 93       	push	r29
 3e8:	00 d0       	rcall	.+0      	; 0x3ea <delay_ms+0x6>
 3ea:	00 d0       	rcall	.+0      	; 0x3ec <delay_ms+0x8>
 3ec:	00 d0       	rcall	.+0      	; 0x3ee <delay_ms+0xa>
 3ee:	cd b7       	in	r28, 0x3d	; 61
 3f0:	de b7       	in	r29, 0x3e	; 62
 3f2:	9e 83       	std	Y+6, r25	; 0x06
 3f4:	8d 83       	std	Y+5, r24	; 0x05
 3f6:	1a 82       	std	Y+2, r1	; 0x02
 3f8:	19 82       	std	Y+1, r1	; 0x01
 3fa:	13 c0       	rjmp	.+38     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 3fc:	1c 82       	std	Y+4, r1	; 0x04
 3fe:	1b 82       	std	Y+3, r1	; 0x03
 400:	06 c0       	rjmp	.+12     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 402:	00 00       	nop
 404:	8b 81       	ldd	r24, Y+3	; 0x03
 406:	9c 81       	ldd	r25, Y+4	; 0x04
 408:	01 96       	adiw	r24, 0x01	; 1
 40a:	9c 83       	std	Y+4, r25	; 0x04
 40c:	8b 83       	std	Y+3, r24	; 0x03
 40e:	8b 81       	ldd	r24, Y+3	; 0x03
 410:	9c 81       	ldd	r25, Y+4	; 0x04
 412:	87 30       	cpi	r24, 0x07	; 7
 414:	93 40       	sbci	r25, 0x03	; 3
 416:	ac f3       	brlt	.-22     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 418:	89 81       	ldd	r24, Y+1	; 0x01
 41a:	9a 81       	ldd	r25, Y+2	; 0x02
 41c:	01 96       	adiw	r24, 0x01	; 1
 41e:	9a 83       	std	Y+2, r25	; 0x02
 420:	89 83       	std	Y+1, r24	; 0x01
 422:	29 81       	ldd	r18, Y+1	; 0x01
 424:	3a 81       	ldd	r19, Y+2	; 0x02
 426:	8d 81       	ldd	r24, Y+5	; 0x05
 428:	9e 81       	ldd	r25, Y+6	; 0x06
 42a:	28 17       	cp	r18, r24
 42c:	39 07       	cpc	r19, r25
 42e:	34 f3       	brlt	.-52     	; 0x3fc <delay_ms+0x18>
 430:	00 00       	nop
 432:	26 96       	adiw	r28, 0x06	; 6
 434:	0f b6       	in	r0, 0x3f	; 63
 436:	f8 94       	cli
 438:	de bf       	out	0x3e, r29	; 62
 43a:	0f be       	out	0x3f, r0	; 63
 43c:	cd bf       	out	0x3d, r28	; 61
 43e:	df 91       	pop	r29
 440:	cf 91       	pop	r28
 442:	08 95       	ret

00000444 <menu_str_tick>:
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	00 d0       	rcall	.+0      	; 0x44a <menu_str_tick+0x6>
 44a:	00 d0       	rcall	.+0      	; 0x44c <menu_str_tick+0x8>
 44c:	cd b7       	in	r28, 0x3d	; 61
 44e:	de b7       	in	r29, 0x3e	; 62
 450:	9c 83       	std	Y+4, r25	; 0x04
 452:	8b 83       	std	Y+3, r24	; 0x03
 454:	8b 81       	ldd	r24, Y+3	; 0x03
 456:	9c 81       	ldd	r25, Y+4	; 0x04
 458:	89 2b       	or	r24, r25
 45a:	79 f5       	brne	.+94     	; 0x4ba <menu_str_tick+0x76>
 45c:	81 e0       	ldi	r24, 0x01	; 1
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	9a 83       	std	Y+2, r25	; 0x02
 462:	89 83       	std	Y+1, r24	; 0x01
 464:	21 c0       	rjmp	.+66     	; 0x4a8 <menu_str_tick+0x64>
 466:	89 81       	ldd	r24, Y+1	; 0x01
 468:	a8 df       	rcall	.-176    	; 0x3ba <LCD_Cursor>
 46a:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <m_cnt>
 46e:	28 2f       	mov	r18, r24
 470:	30 e0       	ldi	r19, 0x00	; 0
 472:	89 81       	ldd	r24, Y+1	; 0x01
 474:	9a 81       	ldd	r25, Y+2	; 0x02
 476:	82 0f       	add	r24, r18
 478:	93 1f       	adc	r25, r19
 47a:	02 97       	sbiw	r24, 0x02	; 2
 47c:	8c 5f       	subi	r24, 0xFC	; 252
 47e:	9e 4f       	sbci	r25, 0xFE	; 254
 480:	fc 01       	movw	r30, r24
 482:	80 81       	ld	r24, Z
 484:	41 df       	rcall	.-382    	; 0x308 <LCD_WriteData>
 486:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <m_cnt>
 48a:	28 2f       	mov	r18, r24
 48c:	30 e0       	ldi	r19, 0x00	; 0
 48e:	89 81       	ldd	r24, Y+1	; 0x01
 490:	9a 81       	ldd	r25, Y+2	; 0x02
 492:	82 0f       	add	r24, r18
 494:	93 1f       	adc	r25, r19
 496:	89 97       	sbiw	r24, 0x29	; 41
 498:	11 f4       	brne	.+4      	; 0x49e <menu_str_tick+0x5a>
 49a:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <m_cnt>
 49e:	89 81       	ldd	r24, Y+1	; 0x01
 4a0:	9a 81       	ldd	r25, Y+2	; 0x02
 4a2:	01 96       	adiw	r24, 0x01	; 1
 4a4:	9a 83       	std	Y+2, r25	; 0x02
 4a6:	89 83       	std	Y+1, r24	; 0x01
 4a8:	89 81       	ldd	r24, Y+1	; 0x01
 4aa:	9a 81       	ldd	r25, Y+2	; 0x02
 4ac:	41 97       	sbiw	r24, 0x11	; 17
 4ae:	d8 f2       	brcs	.-74     	; 0x466 <menu_str_tick+0x22>
 4b0:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <m_cnt>
 4b4:	8f 5f       	subi	r24, 0xFF	; 255
 4b6:	80 93 2b 01 	sts	0x012B, r24	; 0x80012b <m_cnt>
 4ba:	8b 81       	ldd	r24, Y+3	; 0x03
 4bc:	9c 81       	ldd	r25, Y+4	; 0x04
 4be:	0f 90       	pop	r0
 4c0:	0f 90       	pop	r0
 4c2:	0f 90       	pop	r0
 4c4:	0f 90       	pop	r0
 4c6:	df 91       	pop	r29
 4c8:	cf 91       	pop	r28
 4ca:	08 95       	ret

000004cc <player_str_tick>:
 4cc:	cf 93       	push	r28
 4ce:	df 93       	push	r29
 4d0:	00 d0       	rcall	.+0      	; 0x4d2 <player_str_tick+0x6>
 4d2:	00 d0       	rcall	.+0      	; 0x4d4 <player_str_tick+0x8>
 4d4:	cd b7       	in	r28, 0x3d	; 61
 4d6:	de b7       	in	r29, 0x3e	; 62
 4d8:	9c 83       	std	Y+4, r25	; 0x04
 4da:	8b 83       	std	Y+3, r24	; 0x03
 4dc:	8b 81       	ldd	r24, Y+3	; 0x03
 4de:	9c 81       	ldd	r25, Y+4	; 0x04
 4e0:	89 2b       	or	r24, r25
 4e2:	79 f5       	brne	.+94     	; 0x542 <player_str_tick+0x76>
 4e4:	81 e0       	ldi	r24, 0x01	; 1
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	9a 83       	std	Y+2, r25	; 0x02
 4ea:	89 83       	std	Y+1, r24	; 0x01
 4ec:	21 c0       	rjmp	.+66     	; 0x530 <player_str_tick+0x64>
 4ee:	89 81       	ldd	r24, Y+1	; 0x01
 4f0:	64 df       	rcall	.-312    	; 0x3ba <LCD_Cursor>
 4f2:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <p_cnt>
 4f6:	28 2f       	mov	r18, r24
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	89 81       	ldd	r24, Y+1	; 0x01
 4fc:	9a 81       	ldd	r25, Y+2	; 0x02
 4fe:	82 0f       	add	r24, r18
 500:	93 1f       	adc	r25, r19
 502:	02 97       	sbiw	r24, 0x02	; 2
 504:	84 5d       	subi	r24, 0xD4	; 212
 506:	9e 4f       	sbci	r25, 0xFE	; 254
 508:	fc 01       	movw	r30, r24
 50a:	80 81       	ld	r24, Z
 50c:	fd de       	rcall	.-518    	; 0x308 <LCD_WriteData>
 50e:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <p_cnt>
 512:	28 2f       	mov	r18, r24
 514:	30 e0       	ldi	r19, 0x00	; 0
 516:	89 81       	ldd	r24, Y+1	; 0x01
 518:	9a 81       	ldd	r25, Y+2	; 0x02
 51a:	82 0f       	add	r24, r18
 51c:	93 1f       	adc	r25, r19
 51e:	c9 97       	sbiw	r24, 0x39	; 57
 520:	11 f4       	brne	.+4      	; 0x526 <player_str_tick+0x5a>
 522:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <p_cnt>
 526:	89 81       	ldd	r24, Y+1	; 0x01
 528:	9a 81       	ldd	r25, Y+2	; 0x02
 52a:	01 96       	adiw	r24, 0x01	; 1
 52c:	9a 83       	std	Y+2, r25	; 0x02
 52e:	89 83       	std	Y+1, r24	; 0x01
 530:	89 81       	ldd	r24, Y+1	; 0x01
 532:	9a 81       	ldd	r25, Y+2	; 0x02
 534:	41 97       	sbiw	r24, 0x11	; 17
 536:	d8 f2       	brcs	.-74     	; 0x4ee <player_str_tick+0x22>
 538:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <p_cnt>
 53c:	8f 5f       	subi	r24, 0xFF	; 255
 53e:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <p_cnt>
 542:	8b 81       	ldd	r24, Y+3	; 0x03
 544:	9c 81       	ldd	r25, Y+4	; 0x04
 546:	0f 90       	pop	r0
 548:	0f 90       	pop	r0
 54a:	0f 90       	pop	r0
 54c:	0f 90       	pop	r0
 54e:	df 91       	pop	r29
 550:	cf 91       	pop	r28
 552:	08 95       	ret

00000554 <menu_tick>:
 554:	cf 93       	push	r28
 556:	df 93       	push	r29
 558:	00 d0       	rcall	.+0      	; 0x55a <menu_tick+0x6>
 55a:	cd b7       	in	r28, 0x3d	; 61
 55c:	de b7       	in	r29, 0x3e	; 62
 55e:	86 e2       	ldi	r24, 0x26	; 38
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	fc 01       	movw	r30, r24
 564:	80 81       	ld	r24, Z
 566:	88 2f       	mov	r24, r24
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	81 70       	andi	r24, 0x01	; 1
 56c:	99 27       	eor	r25, r25
 56e:	21 e0       	ldi	r18, 0x01	; 1
 570:	89 2b       	or	r24, r25
 572:	09 f0       	breq	.+2      	; 0x576 <menu_tick+0x22>
 574:	20 e0       	ldi	r18, 0x00	; 0
 576:	29 83       	std	Y+1, r18	; 0x01
 578:	1a 82       	std	Y+2, r1	; 0x02
 57a:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <menu_state>
 57e:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <menu_state+0x1>
 582:	81 30       	cpi	r24, 0x01	; 1
 584:	91 05       	cpc	r25, r1
 586:	d1 f0       	breq	.+52     	; 0x5bc <menu_tick+0x68>
 588:	81 30       	cpi	r24, 0x01	; 1
 58a:	91 05       	cpc	r25, r1
 58c:	30 f0       	brcs	.+12     	; 0x59a <menu_tick+0x46>
 58e:	82 30       	cpi	r24, 0x02	; 2
 590:	91 05       	cpc	r25, r1
 592:	39 f1       	breq	.+78     	; 0x5e2 <menu_tick+0x8e>
 594:	03 97       	sbiw	r24, 0x03	; 3
 596:	a9 f1       	breq	.+106    	; 0x602 <menu_tick+0xae>
 598:	39 c0       	rjmp	.+114    	; 0x60c <menu_tick+0xb8>
 59a:	89 81       	ldd	r24, Y+1	; 0x01
 59c:	88 23       	and	r24, r24
 59e:	21 f4       	brne	.+8      	; 0x5a8 <menu_tick+0x54>
 5a0:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <menu_state+0x1>
 5a4:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <menu_state>
 5a8:	89 81       	ldd	r24, Y+1	; 0x01
 5aa:	88 23       	and	r24, r24
 5ac:	61 f1       	breq	.+88     	; 0x606 <menu_tick+0xb2>
 5ae:	81 e0       	ldi	r24, 0x01	; 1
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <menu_state+0x1>
 5b6:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <menu_state>
 5ba:	25 c0       	rjmp	.+74     	; 0x606 <menu_tick+0xb2>
 5bc:	89 81       	ldd	r24, Y+1	; 0x01
 5be:	88 23       	and	r24, r24
 5c0:	31 f4       	brne	.+12     	; 0x5ce <menu_tick+0x7a>
 5c2:	82 e0       	ldi	r24, 0x02	; 2
 5c4:	90 e0       	ldi	r25, 0x00	; 0
 5c6:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <menu_state+0x1>
 5ca:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <menu_state>
 5ce:	89 81       	ldd	r24, Y+1	; 0x01
 5d0:	88 23       	and	r24, r24
 5d2:	d9 f0       	breq	.+54     	; 0x60a <menu_tick+0xb6>
 5d4:	81 e0       	ldi	r24, 0x01	; 1
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <menu_state+0x1>
 5dc:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <menu_state>
 5e0:	14 c0       	rjmp	.+40     	; 0x60a <menu_tick+0xb6>
 5e2:	89 81       	ldd	r24, Y+1	; 0x01
 5e4:	88 23       	and	r24, r24
 5e6:	39 f0       	breq	.+14     	; 0x5f6 <menu_tick+0xa2>
 5e8:	83 e0       	ldi	r24, 0x03	; 3
 5ea:	90 e0       	ldi	r25, 0x00	; 0
 5ec:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <menu_state+0x1>
 5f0:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <menu_state>
 5f4:	06 c0       	rjmp	.+12     	; 0x602 <menu_tick+0xae>
 5f6:	82 e0       	ldi	r24, 0x02	; 2
 5f8:	90 e0       	ldi	r25, 0x00	; 0
 5fa:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <menu_state+0x1>
 5fe:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <menu_state>
 602:	00 00       	nop
 604:	03 c0       	rjmp	.+6      	; 0x60c <menu_tick+0xb8>
 606:	00 00       	nop
 608:	01 c0       	rjmp	.+2      	; 0x60c <menu_tick+0xb8>
 60a:	00 00       	nop
 60c:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <menu_state>
 610:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <menu_state+0x1>
 614:	81 30       	cpi	r24, 0x01	; 1
 616:	91 05       	cpc	r25, r1
 618:	09 f1       	breq	.+66     	; 0x65c <menu_tick+0x108>
 61a:	81 30       	cpi	r24, 0x01	; 1
 61c:	91 05       	cpc	r25, r1
 61e:	30 f0       	brcs	.+12     	; 0x62c <menu_tick+0xd8>
 620:	82 30       	cpi	r24, 0x02	; 2
 622:	91 05       	cpc	r25, r1
 624:	39 f0       	breq	.+14     	; 0x634 <menu_tick+0xe0>
 626:	03 97       	sbiw	r24, 0x03	; 3
 628:	49 f0       	breq	.+18     	; 0x63c <menu_tick+0xe8>
 62a:	1a c0       	rjmp	.+52     	; 0x660 <menu_tick+0x10c>
 62c:	80 e0       	ldi	r24, 0x00	; 0
 62e:	90 e0       	ldi	r25, 0x00	; 0
 630:	09 df       	rcall	.-494    	; 0x444 <menu_str_tick>
 632:	17 c0       	rjmp	.+46     	; 0x662 <menu_tick+0x10e>
 634:	80 e0       	ldi	r24, 0x00	; 0
 636:	90 e0       	ldi	r25, 0x00	; 0
 638:	49 df       	rcall	.-366    	; 0x4cc <player_str_tick>
 63a:	13 c0       	rjmp	.+38     	; 0x662 <menu_tick+0x10e>
 63c:	89 81       	ldd	r24, Y+1	; 0x01
 63e:	88 23       	and	r24, r24
 640:	79 f4       	brne	.+30     	; 0x660 <menu_tick+0x10c>
 642:	81 e0       	ldi	r24, 0x01	; 1
 644:	8a 83       	std	Y+2, r24	; 0x02
 646:	8a 81       	ldd	r24, Y+2	; 0x02
 648:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <ready>
 64c:	81 e0       	ldi	r24, 0x01	; 1
 64e:	80 93 71 01 	sts	0x0171, r24	; 0x800171 <ready>
 652:	65 e6       	ldi	r22, 0x65	; 101
 654:	71 e0       	ldi	r23, 0x01	; 1
 656:	81 e0       	ldi	r24, 0x01	; 1
 658:	86 de       	rcall	.-756    	; 0x366 <LCD_DisplayString>
 65a:	02 c0       	rjmp	.+4      	; 0x660 <menu_tick+0x10c>
 65c:	00 00       	nop
 65e:	01 c0       	rjmp	.+2      	; 0x662 <menu_tick+0x10e>
 660:	00 00       	nop
 662:	00 00       	nop
 664:	0f 90       	pop	r0
 666:	0f 90       	pop	r0
 668:	df 91       	pop	r29
 66a:	cf 91       	pop	r28
 66c:	08 95       	ret

0000066e <main>:

int main(void)
{
 66e:	0f 93       	push	r16
 670:	1f 93       	push	r17
 672:	cf 93       	push	r28
 674:	df 93       	push	r29
 676:	cd b7       	in	r28, 0x3d	; 61
 678:	de b7       	in	r29, 0x3e	; 62
 67a:	2e 97       	sbiw	r28, 0x0e	; 14
 67c:	0f b6       	in	r0, 0x3f	; 63
 67e:	f8 94       	cli
 680:	de bf       	out	0x3e, r29	; 62
 682:	0f be       	out	0x3f, r0	; 63
 684:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0xFF; PORTB = 0x00; // PORTB set to output, outputs init 0s
 686:	84 e2       	ldi	r24, 0x24	; 36
 688:	90 e0       	ldi	r25, 0x00	; 0
 68a:	2f ef       	ldi	r18, 0xFF	; 255
 68c:	fc 01       	movw	r30, r24
 68e:	20 83       	st	Z, r18
 690:	85 e2       	ldi	r24, 0x25	; 37
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	fc 01       	movw	r30, r24
 696:	10 82       	st	Z, r1
	DDRC = 0xF0; PORTC = 0x0F; // PC7..4 outputs init 0s, PC3..0 inputs init 1s
 698:	87 e2       	ldi	r24, 0x27	; 39
 69a:	90 e0       	ldi	r25, 0x00	; 0
 69c:	20 ef       	ldi	r18, 0xF0	; 240
 69e:	fc 01       	movw	r30, r24
 6a0:	20 83       	st	Z, r18
 6a2:	88 e2       	ldi	r24, 0x28	; 40
 6a4:	90 e0       	ldi	r25, 0x00	; 0
 6a6:	2f e0       	ldi	r18, 0x0F	; 15
 6a8:	fc 01       	movw	r30, r24
 6aa:	20 83       	st	Z, r18
	DDRA = 0xFF; PORTA = 0x00; //outputs
 6ac:	81 e2       	ldi	r24, 0x21	; 33
 6ae:	90 e0       	ldi	r25, 0x00	; 0
 6b0:	2f ef       	ldi	r18, 0xFF	; 255
 6b2:	fc 01       	movw	r30, r24
 6b4:	20 83       	st	Z, r18
 6b6:	82 e2       	ldi	r24, 0x22	; 34
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	fc 01       	movw	r30, r24
 6bc:	10 82       	st	Z, r1
	DDRD = 0xFF; PORTD = 0x00;
 6be:	8a e2       	ldi	r24, 0x2A	; 42
 6c0:	90 e0       	ldi	r25, 0x00	; 0
 6c2:	2f ef       	ldi	r18, 0xFF	; 255
 6c4:	fc 01       	movw	r30, r24
 6c6:	20 83       	st	Z, r18
 6c8:	8b e2       	ldi	r24, 0x2B	; 43
 6ca:	90 e0       	ldi	r25, 0x00	; 0
 6cc:	fc 01       	movw	r30, r24
 6ce:	10 82       	st	Z, r1
	
	//Greatest common divisor for all tasks or smallest time unit for tasks.
	unsigned long int GCD = 15;
 6d0:	8f e0       	ldi	r24, 0x0F	; 15
 6d2:	90 e0       	ldi	r25, 0x00	; 0
 6d4:	a0 e0       	ldi	r26, 0x00	; 0
 6d6:	b0 e0       	ldi	r27, 0x00	; 0
 6d8:	8b 83       	std	Y+3, r24	; 0x03
 6da:	9c 83       	std	Y+4, r25	; 0x04
 6dc:	ad 83       	std	Y+5, r26	; 0x05
 6de:	be 83       	std	Y+6, r27	; 0x06

	//Recalculate GCD periods for scheduler
	unsigned long int lcd_period = 15;
 6e0:	8f e0       	ldi	r24, 0x0F	; 15
 6e2:	90 e0       	ldi	r25, 0x00	; 0
 6e4:	a0 e0       	ldi	r26, 0x00	; 0
 6e6:	b0 e0       	ldi	r27, 0x00	; 0
 6e8:	8f 83       	std	Y+7, r24	; 0x07
 6ea:	98 87       	std	Y+8, r25	; 0x08
 6ec:	a9 87       	std	Y+9, r26	; 0x09
 6ee:	ba 87       	std	Y+10, r27	; 0x0a
	
	//Declare an array of tasks
	static task task1;
	task *tasks[] = { &task1 };
 6f0:	82 e7       	ldi	r24, 0x72	; 114
 6f2:	91 e0       	ldi	r25, 0x01	; 1
 6f4:	9e 87       	std	Y+14, r25	; 0x0e
 6f6:	8d 87       	std	Y+13, r24	; 0x0d
	const unsigned short numTasks = sizeof(tasks) / sizeof(task*);
 6f8:	81 e0       	ldi	r24, 0x01	; 1
 6fa:	90 e0       	ldi	r25, 0x00	; 0
 6fc:	9c 87       	std	Y+12, r25	; 0x0c
 6fe:	8b 87       	std	Y+11, r24	; 0x0b
	
	//task1
	task1.state = 0;//Task initial state.
 700:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <task1.2231>
	task1.period = lcd_period;//Task Period.
 704:	8f 81       	ldd	r24, Y+7	; 0x07
 706:	98 85       	ldd	r25, Y+8	; 0x08
 708:	a9 85       	ldd	r26, Y+9	; 0x09
 70a:	ba 85       	ldd	r27, Y+10	; 0x0a
 70c:	80 93 73 01 	sts	0x0173, r24	; 0x800173 <task1.2231+0x1>
 710:	90 93 74 01 	sts	0x0174, r25	; 0x800174 <task1.2231+0x2>
 714:	a0 93 75 01 	sts	0x0175, r26	; 0x800175 <task1.2231+0x3>
 718:	b0 93 76 01 	sts	0x0176, r27	; 0x800176 <task1.2231+0x4>
	task1.elapsedTime = lcd_period;//Task current elapsed time.
 71c:	8f 81       	ldd	r24, Y+7	; 0x07
 71e:	98 85       	ldd	r25, Y+8	; 0x08
 720:	a9 85       	ldd	r26, Y+9	; 0x09
 722:	ba 85       	ldd	r27, Y+10	; 0x0a
 724:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <task1.2231+0x5>
 728:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <task1.2231+0x6>
 72c:	a0 93 79 01 	sts	0x0179, r26	; 0x800179 <task1.2231+0x7>
 730:	b0 93 7a 01 	sts	0x017A, r27	; 0x80017a <task1.2231+0x8>
	task1.TickFct = &menu_tick;//Function pointer for the tick.
 734:	8a ea       	ldi	r24, 0xAA	; 170
 736:	92 e0       	ldi	r25, 0x02	; 2
 738:	90 93 7c 01 	sts	0x017C, r25	; 0x80017c <task1.2231+0xa>
 73c:	80 93 7b 01 	sts	0x017B, r24	; 0x80017b <task1.2231+0x9>
	
	// Set the timer and turn it on
	TimerSet(GCD);
 740:	8b 81       	ldd	r24, Y+3	; 0x03
 742:	9c 81       	ldd	r25, Y+4	; 0x04
 744:	ad 81       	ldd	r26, Y+5	; 0x05
 746:	be 81       	ldd	r27, Y+6	; 0x06
 748:	bc 01       	movw	r22, r24
 74a:	cd 01       	movw	r24, r26
 74c:	bd dc       	rcall	.-1670   	; 0xc8 <TimerSet>
	TimerOn();
 74e:	ea dc       	rcall	.-1580   	; 0x124 <TimerOn>
	LCD_init();
 750:	96 dd       	rcall	.-1236   	; 0x27e <LCD_init>
 752:	8b dd       	rcall	.-1258   	; 0x26a <LCD_ClearScreen>
	LCD_ClearScreen();
 754:	1a 82       	std	Y+2, r1	; 0x02
 756:	19 82       	std	Y+1, r1	; 0x01
	//unsigned char tmp = 0;
	
	while(1) {

		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
 758:	9b c0       	rjmp	.+310    	; 0x890 <main+0x222>
 75a:	89 81       	ldd	r24, Y+1	; 0x01
 75c:	9a 81       	ldd	r25, Y+2	; 0x02
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
 75e:	88 0f       	add	r24, r24
 760:	99 1f       	adc	r25, r25
 762:	9e 01       	movw	r18, r28
 764:	2f 5f       	subi	r18, 0xFF	; 255
 766:	3f 4f       	sbci	r19, 0xFF	; 255
 768:	82 0f       	add	r24, r18
 76a:	93 1f       	adc	r25, r19
 76c:	0c 96       	adiw	r24, 0x0c	; 12
 76e:	fc 01       	movw	r30, r24
 770:	80 81       	ld	r24, Z
 772:	91 81       	ldd	r25, Z+1	; 0x01
 774:	fc 01       	movw	r30, r24
 776:	25 81       	ldd	r18, Z+5	; 0x05
 778:	36 81       	ldd	r19, Z+6	; 0x06
 77a:	47 81       	ldd	r20, Z+7	; 0x07
 77c:	50 85       	ldd	r21, Z+8	; 0x08
 77e:	89 81       	ldd	r24, Y+1	; 0x01
 780:	9a 81       	ldd	r25, Y+2	; 0x02
 782:	88 0f       	add	r24, r24
 784:	99 1f       	adc	r25, r25
 786:	be 01       	movw	r22, r28
 788:	6f 5f       	subi	r22, 0xFF	; 255
 78a:	7f 4f       	sbci	r23, 0xFF	; 255
 78c:	86 0f       	add	r24, r22
 78e:	97 1f       	adc	r25, r23
 790:	0c 96       	adiw	r24, 0x0c	; 12
 792:	fc 01       	movw	r30, r24
 794:	80 81       	ld	r24, Z
 796:	91 81       	ldd	r25, Z+1	; 0x01
 798:	fc 01       	movw	r30, r24
 79a:	81 81       	ldd	r24, Z+1	; 0x01
 79c:	92 81       	ldd	r25, Z+2	; 0x02
 79e:	a3 81       	ldd	r26, Z+3	; 0x03
 7a0:	b4 81       	ldd	r27, Z+4	; 0x04
 7a2:	28 17       	cp	r18, r24
 7a4:	39 07       	cpc	r19, r25
 7a6:	4a 07       	cpc	r20, r26
 7a8:	5b 07       	cpc	r21, r27
 7aa:	09 f0       	breq	.+2      	; 0x7ae <main+0x140>
 7ac:	45 c0       	rjmp	.+138    	; 0x838 <main+0x1ca>
 7ae:	89 81       	ldd	r24, Y+1	; 0x01
 7b0:	9a 81       	ldd	r25, Y+2	; 0x02
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
 7b2:	88 0f       	add	r24, r24
 7b4:	99 1f       	adc	r25, r25
 7b6:	9e 01       	movw	r18, r28
 7b8:	2f 5f       	subi	r18, 0xFF	; 255
 7ba:	3f 4f       	sbci	r19, 0xFF	; 255
 7bc:	82 0f       	add	r24, r18
 7be:	93 1f       	adc	r25, r19
 7c0:	0c 96       	adiw	r24, 0x0c	; 12
 7c2:	fc 01       	movw	r30, r24
 7c4:	00 81       	ld	r16, Z
 7c6:	11 81       	ldd	r17, Z+1	; 0x01
 7c8:	89 81       	ldd	r24, Y+1	; 0x01
 7ca:	9a 81       	ldd	r25, Y+2	; 0x02
 7cc:	88 0f       	add	r24, r24
 7ce:	99 1f       	adc	r25, r25
 7d0:	9e 01       	movw	r18, r28
 7d2:	2f 5f       	subi	r18, 0xFF	; 255
 7d4:	3f 4f       	sbci	r19, 0xFF	; 255
 7d6:	82 0f       	add	r24, r18
 7d8:	93 1f       	adc	r25, r19
 7da:	0c 96       	adiw	r24, 0x0c	; 12
 7dc:	fc 01       	movw	r30, r24
 7de:	80 81       	ld	r24, Z
 7e0:	91 81       	ldd	r25, Z+1	; 0x01
 7e2:	fc 01       	movw	r30, r24
 7e4:	21 85       	ldd	r18, Z+9	; 0x09
 7e6:	32 85       	ldd	r19, Z+10	; 0x0a
 7e8:	89 81       	ldd	r24, Y+1	; 0x01
 7ea:	9a 81       	ldd	r25, Y+2	; 0x02
 7ec:	88 0f       	add	r24, r24
 7ee:	99 1f       	adc	r25, r25
 7f0:	ae 01       	movw	r20, r28
 7f2:	4f 5f       	subi	r20, 0xFF	; 255
 7f4:	5f 4f       	sbci	r21, 0xFF	; 255
 7f6:	84 0f       	add	r24, r20
 7f8:	95 1f       	adc	r25, r21
 7fa:	0c 96       	adiw	r24, 0x0c	; 12
 7fc:	fc 01       	movw	r30, r24
 7fe:	80 81       	ld	r24, Z
 800:	91 81       	ldd	r25, Z+1	; 0x01
 802:	fc 01       	movw	r30, r24
 804:	80 81       	ld	r24, Z
 806:	08 2e       	mov	r0, r24
 808:	00 0c       	add	r0, r0
 80a:	99 0b       	sbc	r25, r25
 80c:	f9 01       	movw	r30, r18
 80e:	09 95       	icall
 810:	f8 01       	movw	r30, r16
 812:	80 83       	st	Z, r24
 814:	89 81       	ldd	r24, Y+1	; 0x01
 816:	9a 81       	ldd	r25, Y+2	; 0x02
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
 818:	88 0f       	add	r24, r24
 81a:	99 1f       	adc	r25, r25
 81c:	9e 01       	movw	r18, r28
 81e:	2f 5f       	subi	r18, 0xFF	; 255
 820:	3f 4f       	sbci	r19, 0xFF	; 255
 822:	82 0f       	add	r24, r18
 824:	93 1f       	adc	r25, r19
 826:	0c 96       	adiw	r24, 0x0c	; 12
 828:	fc 01       	movw	r30, r24
 82a:	80 81       	ld	r24, Z
 82c:	91 81       	ldd	r25, Z+1	; 0x01
 82e:	fc 01       	movw	r30, r24
 830:	15 82       	std	Z+5, r1	; 0x05
 832:	16 82       	std	Z+6, r1	; 0x06
 834:	17 82       	std	Z+7, r1	; 0x07
 836:	10 86       	std	Z+8, r1	; 0x08
 838:	89 81       	ldd	r24, Y+1	; 0x01
 83a:	9a 81       	ldd	r25, Y+2	; 0x02
			}
			tasks[i]->elapsedTime += 1;
 83c:	88 0f       	add	r24, r24
 83e:	99 1f       	adc	r25, r25
 840:	9e 01       	movw	r18, r28
 842:	2f 5f       	subi	r18, 0xFF	; 255
 844:	3f 4f       	sbci	r19, 0xFF	; 255
 846:	82 0f       	add	r24, r18
 848:	93 1f       	adc	r25, r19
 84a:	0c 96       	adiw	r24, 0x0c	; 12
 84c:	fc 01       	movw	r30, r24
 84e:	20 81       	ld	r18, Z
 850:	31 81       	ldd	r19, Z+1	; 0x01
 852:	89 81       	ldd	r24, Y+1	; 0x01
 854:	9a 81       	ldd	r25, Y+2	; 0x02
 856:	88 0f       	add	r24, r24
 858:	99 1f       	adc	r25, r25
 85a:	ae 01       	movw	r20, r28
 85c:	4f 5f       	subi	r20, 0xFF	; 255
 85e:	5f 4f       	sbci	r21, 0xFF	; 255
 860:	84 0f       	add	r24, r20
 862:	95 1f       	adc	r25, r21
 864:	0c 96       	adiw	r24, 0x0c	; 12
 866:	fc 01       	movw	r30, r24
 868:	80 81       	ld	r24, Z
 86a:	91 81       	ldd	r25, Z+1	; 0x01
 86c:	fc 01       	movw	r30, r24
 86e:	85 81       	ldd	r24, Z+5	; 0x05
 870:	96 81       	ldd	r25, Z+6	; 0x06
 872:	a7 81       	ldd	r26, Z+7	; 0x07
 874:	b0 85       	ldd	r27, Z+8	; 0x08
 876:	01 96       	adiw	r24, 0x01	; 1
 878:	a1 1d       	adc	r26, r1
 87a:	b1 1d       	adc	r27, r1
 87c:	f9 01       	movw	r30, r18
 87e:	85 83       	std	Z+5, r24	; 0x05
 880:	96 83       	std	Z+6, r25	; 0x06
 882:	a7 83       	std	Z+7, r26	; 0x07
 884:	b0 87       	std	Z+8, r27	; 0x08
 886:	89 81       	ldd	r24, Y+1	; 0x01
 888:	9a 81       	ldd	r25, Y+2	; 0x02
	//unsigned char tmp = 0;
	
	while(1) {

		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
 88a:	01 96       	adiw	r24, 0x01	; 1
 88c:	9a 83       	std	Y+2, r25	; 0x02
 88e:	89 83       	std	Y+1, r24	; 0x01
 890:	29 81       	ldd	r18, Y+1	; 0x01
 892:	3a 81       	ldd	r19, Y+2	; 0x02
 894:	8b 85       	ldd	r24, Y+11	; 0x0b
 896:	9c 85       	ldd	r25, Y+12	; 0x0c
 898:	28 17       	cp	r18, r24
 89a:	39 07       	cpc	r19, r25
 89c:	08 f4       	brcc	.+2      	; 0x8a0 <main+0x232>
 89e:	5d cf       	rjmp	.-326    	; 0x75a <main+0xec>
 8a0:	00 00       	nop
 8a2:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <__data_end>
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
 8a6:	88 23       	and	r24, r24
 8a8:	e1 f3       	breq	.-8      	; 0x8a2 <main+0x234>
 8aa:	10 92 6c 01 	sts	0x016C, r1	; 0x80016c <__data_end>
		TimerFlag = 0;
 8ae:	52 cf       	rjmp	.-348    	; 0x754 <main+0xe6>

000008b0 <_exit>:
 8b0:	f8 94       	cli

000008b2 <__stop_program>:

	} //end while
 8b2:	ff cf       	rjmp	.-2      	; 0x8b2 <__stop_program>
